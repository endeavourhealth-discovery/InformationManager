plugins {
  // Support convention plugins written in Groovy. Convention plugins are build scripts in 'src/main' that automatically become available as plugins in the main build.
  id 'groovy-gradle-plugin'
  id "org.sonarqube" version "3.5.0.2730"
}

repositories {
  // Use the plugin portal to apply community plugins in convention plugins.
  gradlePluginPortal()
}

apply from: "dependencies.gradle"

def sonarLogin = SONAR_LOGIN

sonar {
  properties {
    property 'sonar.projectKey', 'endeavourhealth-discovery_informationManager'
    property 'sonar.organization', 'endeavourhealth-discovery'
    property 'sonar.token', sonarLogin
    property 'sonar.host.url', 'https://sonarcloud.io'
    property 'sonar.junit.reportPaths', 'build/test-results/test/binary'
  }
}

println "Build environment = [$ENV]"
if (ENV == 'prod') {
  build.finalizedBy 'sonar'
}

configurations.all {
  resolutionStrategy.cacheDynamicVersionsFor 30, 'minutes'
}

allprojects {
  apply plugin: 'java-library'
  apply plugin: 'maven-publish'
  apply plugin: 'jacoco'

  group = 'org.endeavourhealth.informationManager'
  version = '1.0-SNAPSHOT'

  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17

  tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
  }

  jacocoTestReport {
    reports {
      xml.enabled true
    }
  }

  build.finalizedBy 'publish'
  test.finalizedBy jacocoTestReport

  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      url = uri('https://artifactory.endhealth.co.uk/repository/maven-releases')
    }
    maven {
      url = uri('https://artifactory.endhealth.co.uk/repository/maven-snapshots')
    }
  }

  publishing {
    publications {
      maven(MavenPublication) {
        from(components.java)
      }
    }
  }
}

