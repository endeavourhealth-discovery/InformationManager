package org.endeavourhealth.informationmanager.common.transform.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.endeavourhealth.informationmanager.common.models.ConceptStatus;

import java.util.HashSet;
import java.util.Set;

@JsonPropertyOrder({"id","status","version","iri","name","description",
        "code","scheme","annotations"})
public class Concept implements IMAnnotated {
    private Integer dbid;
    private String iri;
    private String name;
    private String description;
    private String code;
    private ConceptReference scheme;
    private ConceptStatus status;
    private Integer version;
    private Set<Concept> isA;
    private Set<Annotation> annotations;
    private boolean isRef;

    @Override
    public Integer getDbid() {
        return dbid;
    }

    @Override
    public Concept setDbid(Integer dbid) {
        this.dbid = dbid;
        return this;
    }

    public boolean isRef() {
        return isRef;
    }

    public Concept setRef(boolean ref) {
        isRef = ref;
        return this;
    }

    @Override
    public ConceptStatus getStatus() {
        return status;
    }

    @Override
    public Concept setStatus(ConceptStatus status) {
        this.status=status;
        return this;
    }

    @Override
    public Integer getVersion() {
        return version;
    }

    @Override
    public Concept setVersion(Integer version) {
        this.version= version;
        return this;
    }

    public Concept() {}

    public Concept(String iri, String name) {
        this.iri = iri;
        this.name = name;
    }

    public String getIri() {
        return iri;
    }

    public Concept setIri(String iri) {
        this.iri = iri;
        return this;
    }



    public String getName() {
        return name;
    }

    public Concept setName(String name) {
        this.name = name;
        return this;
    }

    public String getDescription() {
        return description;
    }

    public Concept setDescription(String description) {
        this.description = description;
        return this;
    }

    public ConceptReference getScheme() {
        return scheme;
    }

    public Concept setScheme(ConceptReference scheme) {
        this.scheme = scheme;
        return this;
    }

    public Concept setScheme(String scheme) {
        this.scheme = new ConceptReference(scheme);
        return this;
    }

    public String getCode() {
        return code;
    }

    public Concept setCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Returns a list of IRIs which are the direct superconcepts of this concept
     * <p>This may include asserted superclasses and super properties and equivalent classes as well as those generated by a reasoner</p>
     * @return list of super concepts
     */
    @JsonProperty("IsA")
    public Set<Concept> getIsA() {
        return isA;
    }

    public Concept setIsA(Set<Concept> isA) {
        this.isA = isA;
        return this;
    }
    public Concept addIsa(Concept isa){
        if (this.isA==null)
            isA= new HashSet<>();
        isA.add(isa);
        return this;
    }

    @JsonProperty("Annotation")
    public Set<Annotation> getAnnotations() {
        return annotations;
    }

    public Concept setAnnotations(Set<Annotation> annotations) {
        this.annotations = annotations;
        return this;
    }
    public Concept addAnnotation(Annotation annotation) {
        if (this.annotations==null)
            this.annotations= new HashSet<>();
        this.annotations.add(annotation);
        return this;
    }

    @JsonProperty("isRef")
    public boolean getisRef() {
        return isRef;
    }

    public Concept setIsRef(boolean ref) {
        isRef = ref;
        return this;
    }
}
