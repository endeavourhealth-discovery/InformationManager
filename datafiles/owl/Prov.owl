Prefix(:=<http://www.w3.org/ns/prov-dictionary#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(prov:=<http://www.w3.org/ns/prov#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.w3.org/ns/prov-dictionary#>
<http://www.w3.org/ns/prov-20130430>

Declaration(Class(owl:Thing))
Declaration(Class(prov:Accept))
Declaration(Class(prov:Activity))
Declaration(Class(prov:ActivityInfluence))
Declaration(Class(prov:Agent))
Declaration(Class(prov:AgentInfluence))
Declaration(Class(prov:Association))
Declaration(Class(prov:Attribution))
Declaration(Class(prov:Bundle))
Declaration(Class(prov:Collection))
Declaration(Class(prov:Communication))
Declaration(Class(prov:Contribute))
Declaration(Class(prov:Contributor))
Declaration(Class(prov:Copyright))
Declaration(Class(prov:Create))
Declaration(Class(prov:Creator))
Declaration(Class(prov:Delegation))
Declaration(Class(prov:Derivation))
Declaration(Class(prov:Dictionary))
Declaration(Class(prov:DirectQueryService))
Declaration(Class(prov:EmptyCollection))
Declaration(Class(prov:EmptyDictionary))
Declaration(Class(prov:End))
Declaration(Class(prov:Entity))
Declaration(Class(prov:EntityInfluence))
Declaration(Class(prov:Generation))
Declaration(Class(prov:Influence))
Declaration(Class(prov:Insertion))
Declaration(Class(prov:InstantaneousEvent))
Declaration(Class(prov:Invalidation))
Declaration(Class(prov:KeyEntityPair))
Declaration(Class(prov:Location))
Declaration(Class(prov:Modify))
Declaration(Class(prov:Organization))
Declaration(Class(prov:Person))
Declaration(Class(prov:Plan))
Declaration(Class(prov:PrimarySource))
Declaration(Class(prov:Publish))
Declaration(Class(prov:Publisher))
Declaration(Class(prov:Quotation))
Declaration(Class(prov:Removal))
Declaration(Class(prov:Replace))
Declaration(Class(prov:Revision))
Declaration(Class(prov:RightsAssignment))
Declaration(Class(prov:RightsHolder))
Declaration(Class(prov:Role))
Declaration(Class(prov:ServiceDescription))
Declaration(Class(prov:SoftwareAgent))
Declaration(Class(prov:Start))
Declaration(Class(prov:Submit))
Declaration(Class(prov:Usage))
Declaration(ObjectProperty(owl:topObjectProperty))
Declaration(ObjectProperty(prov:actedOnBehalfOf))
Declaration(ObjectProperty(prov:activity))
Declaration(ObjectProperty(prov:activityOfInfluence))
Declaration(ObjectProperty(prov:agent))
Declaration(ObjectProperty(prov:agentOfInfluence))
Declaration(ObjectProperty(prov:alternateOf))
Declaration(ObjectProperty(prov:asInBundle))
Declaration(ObjectProperty(prov:atLocation))
Declaration(ObjectProperty(prov:contributed))
Declaration(ObjectProperty(prov:derivedByInsertionFrom))
Declaration(ObjectProperty(prov:derivedByRemovalFrom))
Declaration(ObjectProperty(prov:describesService))
Declaration(ObjectProperty(prov:dictionary))
Declaration(ObjectProperty(prov:ended))
Declaration(ObjectProperty(prov:entity))
Declaration(ObjectProperty(prov:entityOfInfluence))
Declaration(ObjectProperty(prov:generalizationOf))
Declaration(ObjectProperty(prov:generated))
Declaration(ObjectProperty(prov:generatedAsDerivation))
Declaration(ObjectProperty(prov:hadActivity))
Declaration(ObjectProperty(prov:hadDelegate))
Declaration(ObjectProperty(prov:hadDerivation))
Declaration(ObjectProperty(prov:hadDictionaryMember))
Declaration(ObjectProperty(prov:hadGeneration))
Declaration(ObjectProperty(prov:hadInfluence))
Declaration(ObjectProperty(prov:hadMember))
Declaration(ObjectProperty(prov:hadPlan))
Declaration(ObjectProperty(prov:hadPrimarySource))
Declaration(ObjectProperty(prov:hadRevision))
Declaration(ObjectProperty(prov:hadRole))
Declaration(ObjectProperty(prov:hadUsage))
Declaration(ObjectProperty(prov:has_anchor))
Declaration(ObjectProperty(prov:has_provenance))
Declaration(ObjectProperty(prov:has_query_service))
Declaration(ObjectProperty(prov:influenced))
Declaration(ObjectProperty(prov:influencer))
Declaration(ObjectProperty(prov:informed))
Declaration(ObjectProperty(prov:insertedKeyEntityPair))
Declaration(ObjectProperty(prov:invalidated))
Declaration(ObjectProperty(prov:locationOf))
Declaration(ObjectProperty(prov:mentionOf))
Declaration(ObjectProperty(prov:pairEntity))
Declaration(ObjectProperty(prov:pingback))
Declaration(ObjectProperty(prov:qualifiedAssociation))
Declaration(ObjectProperty(prov:qualifiedAssociationOf))
Declaration(ObjectProperty(prov:qualifiedAttribution))
Declaration(ObjectProperty(prov:qualifiedAttributionOf))
Declaration(ObjectProperty(prov:qualifiedCommunication))
Declaration(ObjectProperty(prov:qualifiedCommunicationOf))
Declaration(ObjectProperty(prov:qualifiedDelegation))
Declaration(ObjectProperty(prov:qualifiedDelegationOf))
Declaration(ObjectProperty(prov:qualifiedDerivation))
Declaration(ObjectProperty(prov:qualifiedDerivationOf))
Declaration(ObjectProperty(prov:qualifiedEnd))
Declaration(ObjectProperty(prov:qualifiedEndOf))
Declaration(ObjectProperty(prov:qualifiedGeneration))
Declaration(ObjectProperty(prov:qualifiedGenerationOf))
Declaration(ObjectProperty(prov:qualifiedInfluence))
Declaration(ObjectProperty(prov:qualifiedInfluenceOf))
Declaration(ObjectProperty(prov:qualifiedInsertion))
Declaration(ObjectProperty(prov:qualifiedInvalidation))
Declaration(ObjectProperty(prov:qualifiedInvalidationOf))
Declaration(ObjectProperty(prov:qualifiedPrimarySource))
Declaration(ObjectProperty(prov:qualifiedQuotation))
Declaration(ObjectProperty(prov:qualifiedQuotationOf))
Declaration(ObjectProperty(prov:qualifiedRemoval))
Declaration(ObjectProperty(prov:qualifiedRevision))
Declaration(ObjectProperty(prov:qualifiedSourceOf))
Declaration(ObjectProperty(prov:qualifiedStart))
Declaration(ObjectProperty(prov:qualifiedStartOf))
Declaration(ObjectProperty(prov:qualifiedUsage))
Declaration(ObjectProperty(prov:qualifiedUsingActivity))
Declaration(ObjectProperty(prov:quotedAs))
Declaration(ObjectProperty(prov:revisedEntity))
Declaration(ObjectProperty(prov:specializationOf))
Declaration(ObjectProperty(prov:started))
Declaration(ObjectProperty(prov:used))
Declaration(ObjectProperty(prov:wasActivityOfInfluence))
Declaration(ObjectProperty(prov:wasAssociateFor))
Declaration(ObjectProperty(prov:wasAssociatedWith))
Declaration(ObjectProperty(prov:wasAttributedTo))
Declaration(ObjectProperty(prov:wasDerivedFrom))
Declaration(ObjectProperty(prov:wasEndedBy))
Declaration(ObjectProperty(prov:wasGeneratedBy))
Declaration(ObjectProperty(prov:wasInfluencedBy))
Declaration(ObjectProperty(prov:wasInformedBy))
Declaration(ObjectProperty(prov:wasInvalidatedBy))
Declaration(ObjectProperty(prov:wasMemberOf))
Declaration(ObjectProperty(prov:wasPlanOf))
Declaration(ObjectProperty(prov:wasPrimarySourceOf))
Declaration(ObjectProperty(prov:wasQuotedFrom))
Declaration(ObjectProperty(prov:wasRevisionOf))
Declaration(ObjectProperty(prov:wasRoleIn))
Declaration(ObjectProperty(prov:wasStartedBy))
Declaration(ObjectProperty(prov:wasUsedBy))
Declaration(ObjectProperty(prov:wasUsedInDerivation))
Declaration(DataProperty(prov:atTime))
Declaration(DataProperty(prov:endedAtTime))
Declaration(DataProperty(prov:generatedAtTime))
Declaration(DataProperty(prov:invalidatedAtTime))
Declaration(DataProperty(prov:pairKey))
Declaration(DataProperty(prov:provenanceUriTemplate))
Declaration(DataProperty(prov:removedKey))
Declaration(DataProperty(prov:startedAtTime))
Declaration(DataProperty(prov:value))
Declaration(AnnotationProperty(<http://purl.org/vocab/frbr/core#abridgement>))
Declaration(AnnotationProperty(<http://purl.org/vocab/frbr/core#complement>))
Declaration(AnnotationProperty(rdfs:comment))
Declaration(AnnotationProperty(rdfs:isDefinedBy))
Declaration(AnnotationProperty(rdfs:label))
Declaration(AnnotationProperty(rdfs:seeAlso))
Declaration(AnnotationProperty(owl:versionInfo))
Declaration(AnnotationProperty(prov:aq))
Declaration(AnnotationProperty(prov:category))
Declaration(AnnotationProperty(prov:component))
Declaration(AnnotationProperty(prov:constraints))
Declaration(AnnotationProperty(prov:definition))
Declaration(AnnotationProperty(prov:dm))
Declaration(AnnotationProperty(prov:editorialNote))
Declaration(AnnotationProperty(prov:editorsDefinition))
Declaration(AnnotationProperty(prov:inverse))
Declaration(AnnotationProperty(prov:n))
Declaration(AnnotationProperty(prov:order))
Declaration(AnnotationProperty(prov:qualifiedForm))
Declaration(AnnotationProperty(prov:sharesDefinitionWith))
Declaration(AnnotationProperty(prov:todo))
Declaration(AnnotationProperty(prov:unqualifiedForm))
############################
#   Annotation Properties
############################

# Annotation Property: rdfs:comment (rdfs:comment)

AnnotationAssertion(rdfs:comment rdfs:comment ""@en)
AnnotationAssertion(rdfs:isDefinedBy rdfs:comment <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy rdfs:comment <http://www.w3.org/ns/prov-o#>)

# Annotation Property: rdfs:label (rdfs:label)

AnnotationAssertion(rdfs:comment rdfs:label ""@en)
AnnotationAssertion(rdfs:isDefinedBy rdfs:label <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy rdfs:label <http://www.w3.org/ns/prov-o#>)

# Annotation Property: rdfs:seeAlso (rdfs:seeAlso)

AnnotationAssertion(rdfs:comment rdfs:seeAlso ""@en)

# Annotation Property: prov:aq (prov:aq)

AnnotationAssertion(rdfs:isDefinedBy prov:aq <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:aq <http://www.w3.org/ns/prov-o#>)
SubAnnotationPropertyOf(prov:aq rdfs:seeAlso)

# Annotation Property: prov:category (prov:category)

AnnotationAssertion(rdfs:comment prov:category "Classify prov-o terms into three categories, including 'starting-point', 'qualifed', and 'extended'. This classification is used by the prov-o html document to gently introduce prov-o terms to its users. "@en)
AnnotationAssertion(rdfs:isDefinedBy prov:category <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:category <http://www.w3.org/ns/prov-o#>)

# Annotation Property: prov:component (prov:component)

AnnotationAssertion(rdfs:comment prov:component "Classify prov-o terms into six components according to prov-dm, including 'agents-responsibility', 'alternate', 'annotations', 'collections', 'derivations', and 'entities-activities'. This classification is used so that readers of prov-o specification can find its correspondence with the prov-dm specification."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:component <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:component <http://www.w3.org/ns/prov-o#>)

# Annotation Property: prov:constraints (prov:constraints)

AnnotationAssertion(rdfs:comment prov:constraints "A reference to the principal section of the PROV-CONSTRAINTS document that describes this concept."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:constraints <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:constraints <http://www.w3.org/ns/prov-o#>)
SubAnnotationPropertyOf(prov:constraints rdfs:seeAlso)

# Annotation Property: prov:definition (prov:definition)

AnnotationAssertion(rdfs:comment prov:definition "A definition quoted from PROV-DM or PROV-CONSTRAINTS that describes the concept expressed with this OWL term."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:definition <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:definition <http://www.w3.org/ns/prov-o#>)

# Annotation Property: prov:dm (prov:dm)

AnnotationAssertion(rdfs:comment prov:dm "A reference to the principal section of the PROV-DM document that describes this concept."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:dm <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:dm <http://www.w3.org/ns/prov-o#>)
SubAnnotationPropertyOf(prov:dm rdfs:seeAlso)

# Annotation Property: prov:editorialNote (prov:editorialNote)

AnnotationAssertion(rdfs:comment prov:editorialNote "A note by the OWL development team about how this term expresses the PROV-DM concept, or how it should be used in context of semantic web or linked data."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:editorialNote <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:editorialNote <http://www.w3.org/ns/prov-o#>)

# Annotation Property: prov:editorsDefinition (prov:editorsDefinition)

AnnotationAssertion(rdfs:comment prov:editorsDefinition "When the prov-o term does not have a definition drawn from prov-dm, and the prov-o editor provides one."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:editorsDefinition <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:editorsDefinition <http://www.w3.org/ns/prov-o#>)
SubAnnotationPropertyOf(prov:editorsDefinition prov:definition)

# Annotation Property: prov:inverse (prov:inverse)

AnnotationAssertion(rdfs:comment prov:inverse "PROV-O does not define all property inverses. The directionalities defined in PROV-O should be given preference over those not defined. However, if users wish to name the inverse of a PROV-O property, the local name given by prov:inverse should be used."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:inverse <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:inverse <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:seeAlso prov:inverse <http://www.w3.org/TR/prov-o/#names-of-inverse-properties>)

# Annotation Property: prov:n (prov:n)

AnnotationAssertion(rdfs:comment prov:n "A reference to the principal section of the PROV-DM document that describes this concept."@en)
AnnotationAssertion(rdfs:comment prov:n "A reference to the principal section of the PROV-M document that describes this concept."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:n <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:n <http://www.w3.org/ns/prov-o#>)
SubAnnotationPropertyOf(prov:n rdfs:seeAlso)

# Annotation Property: prov:order (prov:order)

AnnotationAssertion(rdfs:comment prov:order "The position that this OWL term should be listed within documentation. The scope of the documentation (e.g., among all terms, among terms within a prov:category, among properties applying to a particular class, etc.) is unspecified."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:order <http://www.w3.org/ns/prov-o#>)

# Annotation Property: prov:qualifiedForm (prov:qualifiedForm)

AnnotationAssertion(rdfs:comment prov:qualifiedForm "This annotation property links a subproperty of prov:wasInfluencedBy with the subclass of prov:Influence and the qualifying property that are used to qualify it. 

Example annotation:

    prov:wasGeneratedBy prov:qualifiedForm prov:qualifiedGeneration, prov:Generation .

Then this unqualified assertion:

    :entity1 prov:wasGeneratedBy :activity1 .

can be qualified by adding:

   :entity1 prov:qualifiedGeneration :entity1Gen .
   :entity1Gen 
       a prov:Generation, prov:Influence;
       prov:activity :activity1;
       :customValue 1337 .

Note how the value of the unqualified influence (prov:wasGeneratedBy :activity1) is mirrored as the value of the prov:activity (or prov:entity, or prov:agent) property on the influence class."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedForm <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedForm <http://www.w3.org/ns/prov-o#>)
SubAnnotationPropertyOf(prov:qualifiedForm rdfs:seeAlso)

# Annotation Property: prov:sharesDefinitionWith (prov:sharesDefinitionWith)

AnnotationAssertion(rdfs:isDefinedBy prov:sharesDefinitionWith <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:sharesDefinitionWith <http://www.w3.org/ns/prov-o#>)
SubAnnotationPropertyOf(prov:sharesDefinitionWith rdfs:seeAlso)

# Annotation Property: prov:unqualifiedForm (prov:unqualifiedForm)

AnnotationAssertion(rdfs:comment prov:unqualifiedForm "Classes and properties used to qualify relationships are annotated with prov:unqualifiedForm to indicate the property used to assert an unqualified provenance relation."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:unqualifiedForm <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:unqualifiedForm <http://www.w3.org/ns/prov-o#>)
SubAnnotationPropertyOf(prov:unqualifiedForm rdfs:seeAlso)


############################
#   Object Properties
############################

# Object Property: prov:actedOnBehalfOf (actedOnBehalfOf)

AnnotationAssertion(rdfs:comment prov:actedOnBehalfOf "An object property to express the accountability of an agent towards another agent. The subordinate agent acted on behalf of the responsible agent in an actual activity. "@en)
AnnotationAssertion(rdfs:isDefinedBy prov:actedOnBehalfOf <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:actedOnBehalfOf "actedOnBehalfOf")
AnnotationAssertion(prov:category prov:actedOnBehalfOf "starting-point")
AnnotationAssertion(prov:component prov:actedOnBehalfOf "agents-responsibility")
AnnotationAssertion(prov:inverse prov:actedOnBehalfOf "hadDelegate")
AnnotationAssertion(prov:qualifiedForm prov:actedOnBehalfOf prov:Delegation)
AnnotationAssertion(prov:qualifiedForm prov:actedOnBehalfOf prov:qualifiedDelegation)
SubObjectPropertyOf(prov:actedOnBehalfOf prov:wasInfluencedBy)
InverseObjectProperties(prov:actedOnBehalfOf prov:hadDelegate)
ObjectPropertyDomain(prov:actedOnBehalfOf prov:Agent)
ObjectPropertyRange(prov:actedOnBehalfOf prov:Agent)

# Object Property: prov:activity (activity)

AnnotationAssertion(rdfs:isDefinedBy prov:activity <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:activity "activity")
AnnotationAssertion(prov:category prov:activity "qualified")
AnnotationAssertion(prov:editorialNote prov:activity "This property behaves in spirit like rdf:object; it references the object of a prov:wasInfluencedBy triple."@en)
AnnotationAssertion(prov:editorsDefinition prov:activity "The prov:activity property references an prov:Activity which influenced a resource. This property applies to an prov:ActivityInfluence, which is given by a subproperty of prov:qualifiedInfluence from the influenced prov:Entity, prov:Activity or prov:Agent.")
AnnotationAssertion(prov:inverse prov:activity "activityOfInfluence")
SubObjectPropertyOf(prov:activity prov:influencer)
InverseObjectProperties(prov:activity prov:activityOfInfluence)
ObjectPropertyDomain(prov:activity prov:ActivityInfluence)
ObjectPropertyRange(prov:activity prov:Activity)

# Object Property: prov:activityOfInfluence (activityOfInfluence)

AnnotationAssertion(rdfs:isDefinedBy prov:activityOfInfluence <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:activityOfInfluence "activityOfInfluence")

# Object Property: prov:agent (agent)

AnnotationAssertion(rdfs:isDefinedBy prov:agent <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:agent "agent")
AnnotationAssertion(prov:category prov:agent "qualified")
AnnotationAssertion(prov:editorialNote prov:agent "This property behaves in spirit like rdf:object; it references the object of a prov:wasInfluencedBy triple."@en)
AnnotationAssertion(prov:editorsDefinition prov:agent "The prov:agent property references an prov:Agent which influenced a resource. This property applies to an prov:AgentInfluence, which is given by a subproperty of prov:qualifiedInfluence from the influenced prov:Entity, prov:Activity or prov:Agent."@en)
AnnotationAssertion(prov:inverse prov:agent "agentOfInfluence")
SubObjectPropertyOf(prov:agent prov:influencer)
InverseObjectProperties(prov:agent prov:agentOfInfluence)
ObjectPropertyDomain(prov:agent prov:AgentInfluence)
ObjectPropertyRange(prov:agent prov:Agent)

# Object Property: prov:agentOfInfluence (agentOfInfluence)

AnnotationAssertion(rdfs:isDefinedBy prov:agentOfInfluence <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:agentOfInfluence "agentOfInfluence")

# Object Property: prov:alternateOf (alternateOf)

AnnotationAssertion(rdfs:isDefinedBy prov:alternateOf <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:isDefinedBy prov:alternateOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:alternateOf "alternateOf")
AnnotationAssertion(rdfs:seeAlso prov:alternateOf prov:specializationOf)
AnnotationAssertion(prov:category prov:alternateOf "expanded")
AnnotationAssertion(prov:component prov:alternateOf "alternate")
AnnotationAssertion(prov:constraints prov:alternateOf "http://www.w3.org/TR/2013/REC-prov-constraints-20130430/#prov-dm-constraints-fig"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:alternateOf "Two alternate entities present aspects of the same thing. These aspects may be the same or different, and the alternate entities may or may not overlap in time."@en)
AnnotationAssertion(prov:dm prov:alternateOf "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-alternate"^^xsd:anyURI)
AnnotationAssertion(prov:inverse prov:alternateOf "alternateOf")
AnnotationAssertion(prov:n prov:alternateOf "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-alternate"^^xsd:anyURI)
InverseObjectProperties(prov:alternateOf prov:alternateOf)
ObjectPropertyDomain(prov:alternateOf prov:Entity)
ObjectPropertyRange(prov:alternateOf prov:Entity)

# Object Property: prov:asInBundle (asInBundle)

AnnotationAssertion(rdfs:comment prov:asInBundle "prov:asInBundle is used to specify which bundle the general entity of a prov:mentionOf property is described.

When :x prov:mentionOf :y and :y is described in Bundle :b, the triple :x prov:asInBundle :b is also asserted to cite the Bundle in which :y was described."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:asInBundle <http://www.w3.org/ns/prov-links#>)
AnnotationAssertion(rdfs:label prov:asInBundle "asInBundle")
AnnotationAssertion(prov:inverse prov:asInBundle "contextOf")
AnnotationAssertion(prov:sharesDefinitionWith prov:asInBundle prov:mentionOf)
ObjectPropertyDomain(prov:asInBundle prov:Entity)
ObjectPropertyRange(prov:asInBundle prov:Bundle)

# Object Property: prov:atLocation (atLocation)

AnnotationAssertion(rdfs:comment prov:atLocation "The Location of any resource."@en)
AnnotationAssertion(rdfs:comment prov:atLocation "This property has multiple RDFS domains to suit multiple OWL Profiles. See <a href=\"#owl-profile\">PROV-O OWL Profile</a>.")
AnnotationAssertion(rdfs:isDefinedBy prov:atLocation <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:atLocation "atLocation")
AnnotationAssertion(prov:category prov:atLocation "expanded")
AnnotationAssertion(prov:editorialNote prov:atLocation "The naming of prov:atLocation parallels prov:atTime, and is not named prov:hadLocation to avoid conflicting with the convention that prov:had* properties are used on prov:Influence classes."@en)
AnnotationAssertion(prov:editorialNote prov:atLocation "This property is not functional because the many values could be at a variety of granularies (In this building, in this room, in that chair)."@en)
AnnotationAssertion(prov:inverse prov:atLocation "locationOf")
AnnotationAssertion(prov:sharesDefinitionWith prov:atLocation prov:Location)
InverseObjectProperties(prov:atLocation prov:locationOf)
ObjectPropertyDomain(prov:atLocation ObjectUnionOf(prov:Activity prov:Agent prov:Entity prov:InstantaneousEvent))
ObjectPropertyRange(prov:atLocation prov:Location)

# Object Property: prov:contributed (contributed)

AnnotationAssertion(rdfs:isDefinedBy prov:contributed <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:contributed "contributed")
InverseObjectProperties(prov:contributed prov:wasAttributedTo)

# Object Property: prov:derivedByInsertionFrom (derivedByInsertionFrom)

AnnotationAssertion(rdfs:isDefinedBy prov:derivedByInsertionFrom <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:derivedByInsertionFrom "derivedByInsertionFrom")
AnnotationAssertion(prov:category prov:derivedByInsertionFrom "collections")
AnnotationAssertion(prov:component prov:derivedByInsertionFrom "collections")
AnnotationAssertion(prov:constraints prov:derivedByInsertionFrom "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-constraints"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:derivedByInsertionFrom "The dictionary was derived from the other by insertion. prov:qualifiedInsertion shows details of the insertion, in particular the inserted key-entity pairs.")
AnnotationAssertion(prov:dm prov:derivedByInsertionFrom "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#term-dictionary-insertion"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:derivedByInsertionFrom "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary-insertion"^^xsd:anyURI)
SubObjectPropertyOf(prov:derivedByInsertionFrom prov:wasDerivedFrom)
ObjectPropertyDomain(prov:derivedByInsertionFrom prov:Dictionary)
ObjectPropertyRange(prov:derivedByInsertionFrom prov:Dictionary)

# Object Property: prov:derivedByRemovalFrom (derivedByRemovalFrom)

AnnotationAssertion(rdfs:isDefinedBy prov:derivedByRemovalFrom <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:derivedByRemovalFrom "derivedByRemovalFrom")
AnnotationAssertion(prov:category prov:derivedByRemovalFrom "collections")
AnnotationAssertion(prov:component prov:derivedByRemovalFrom "collections")
AnnotationAssertion(prov:constraints prov:derivedByRemovalFrom "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-constraints"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:derivedByRemovalFrom "The dictionary was derived from the other by removal. prov:qualifiedRemoval shows details of the removal, in particular the removed key-entity pairs.")
AnnotationAssertion(prov:dm prov:derivedByRemovalFrom "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#term-dictionary-removal"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:derivedByRemovalFrom "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary-removal"^^xsd:anyURI)
SubObjectPropertyOf(prov:derivedByRemovalFrom prov:wasDerivedFrom)
ObjectPropertyDomain(prov:derivedByRemovalFrom prov:Dictionary)
ObjectPropertyRange(prov:derivedByRemovalFrom prov:Dictionary)

# Object Property: prov:describesService (describesService)

AnnotationAssertion(rdfs:comment prov:describesService "relates a generic provenance query service resource (type prov:ServiceDescription) to a specific query service description (e.g. a prov:DirectQueryService or a sd:Service)."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:describesService <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:describesService "describesService")
AnnotationAssertion(prov:aq prov:describesService "http://www.w3.org/TR/2013/NOTE-prov-aq-20130430/rovenance-query-service-description"^^xsd:anyURI)
AnnotationAssertion(prov:category prov:describesService "access-and-query")
AnnotationAssertion(prov:inverse prov:describesService "serviceDescribedBy")

# Object Property: prov:dictionary (dictionary)

AnnotationAssertion(rdfs:isDefinedBy prov:dictionary <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:dictionary "dictionary")
AnnotationAssertion(prov:category prov:dictionary "collections")
AnnotationAssertion(prov:component prov:dictionary "collections")
AnnotationAssertion(prov:constraints prov:dictionary "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-constraints"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:dictionary "The property used by a prov:Insertion and prov:Removal to cite the prov:Dictionary that was prov:derivedByInsertionFrom or prov:derivedByRemovalFrom another dictionary.")
AnnotationAssertion(prov:dm prov:dictionary "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#term-dictionary-insertion"^^xsd:anyURI)
AnnotationAssertion(prov:dm prov:dictionary "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#term-dictionary-removal"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:dictionary "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary-insertion"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:dictionary "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary-removal"^^xsd:anyURI)
SubObjectPropertyOf(prov:dictionary prov:entity)
ObjectPropertyDomain(prov:dictionary prov:Insertion)
ObjectPropertyDomain(prov:dictionary prov:Removal)
ObjectPropertyRange(prov:dictionary prov:Dictionary)

# Object Property: prov:ended (ended)

AnnotationAssertion(rdfs:isDefinedBy prov:ended <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:ended "ended")
InverseObjectProperties(prov:ended prov:wasEndedBy)

# Object Property: prov:entity (entity)

AnnotationAssertion(rdfs:isDefinedBy prov:entity <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:entity "entity")
AnnotationAssertion(prov:category prov:entity "qualified")
AnnotationAssertion(prov:editorialNote prov:entity "This property behaves in spirit like rdf:object; it references the object of a prov:wasInfluencedBy triple."@en)
AnnotationAssertion(prov:editorsDefinition prov:entity "The prov:entity property references an prov:Entity which influenced a resource. This property applies to an prov:EntityInfluence, which is given by a subproperty of prov:qualifiedInfluence from the influenced prov:Entity, prov:Activity or prov:Agent.")
AnnotationAssertion(prov:inverse prov:entity "entityOfInfluence")
SubObjectPropertyOf(prov:entity prov:influencer)
InverseObjectProperties(prov:entity prov:entityOfInfluence)
ObjectPropertyDomain(prov:entity prov:EntityInfluence)
ObjectPropertyRange(prov:entity prov:Entity)

# Object Property: prov:entityOfInfluence (entityOfInfluence)

AnnotationAssertion(rdfs:isDefinedBy prov:entityOfInfluence <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:entityOfInfluence "entityOfInfluence")

# Object Property: prov:generalizationOf (generalizationOf)

AnnotationAssertion(rdfs:isDefinedBy prov:generalizationOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:generalizationOf "generalizationOf")
InverseObjectProperties(prov:generalizationOf prov:specializationOf)

# Object Property: prov:generated (generated)

AnnotationAssertion(rdfs:isDefinedBy prov:generated <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:isDefinedBy prov:generated <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:generated "generated")
AnnotationAssertion(prov:category prov:generated "expanded")
AnnotationAssertion(prov:component prov:generated "entities-activities")
AnnotationAssertion(prov:editorialNote prov:generated "prov:generated is one of few inverse property defined, to allow Activity-oriented assertions in addition to Entity-oriented assertions."@en)
AnnotationAssertion(prov:inverse prov:generated "wasGeneratedBy")
AnnotationAssertion(prov:sharesDefinitionWith prov:generated prov:Generation)
SubObjectPropertyOf(prov:generated prov:influenced)
InverseObjectProperties(prov:generated prov:wasGeneratedBy)
ObjectPropertyDomain(prov:generated prov:Activity)
ObjectPropertyRange(prov:generated prov:Entity)

# Object Property: prov:generatedAsDerivation (generatedAsDerivation)

AnnotationAssertion(rdfs:isDefinedBy prov:generatedAsDerivation <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:generatedAsDerivation "generatedAsDerivation")
InverseObjectProperties(prov:generatedAsDerivation prov:hadGeneration)

# Object Property: prov:hadActivity (hadActivity)

AnnotationAssertion(rdfs:comment prov:hadActivity "The _optional_ Activity of an Influence, which used, generated, invalidated, or was the responsibility of some Entity. This property is _not_ used by ActivityInfluence (use prov:activity instead)."@en)
AnnotationAssertion(rdfs:comment prov:hadActivity "This property has multiple RDFS domains to suit multiple OWL Profiles. See <a href=\"#owl-profile\">PROV-O OWL Profile</a>.")
AnnotationAssertion(rdfs:isDefinedBy prov:hadActivity <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:hadActivity "hadActivity")
AnnotationAssertion(prov:category prov:hadActivity "qualified")
AnnotationAssertion(prov:component prov:hadActivity "derivations")
AnnotationAssertion(prov:editorialNote prov:hadActivity "The multiple rdfs:domain assertions are intended. One is simpler and works for OWL-RL, the union is more specific but is not recognized by OWL-RL."@en)
AnnotationAssertion(prov:inverse prov:hadActivity "wasActivityOfInfluence")
AnnotationAssertion(prov:sharesDefinitionWith prov:hadActivity prov:Activity)
InverseObjectProperties(prov:hadActivity prov:wasActivityOfInfluence)
ObjectPropertyDomain(prov:hadActivity prov:Influence)
ObjectPropertyDomain(prov:hadActivity ObjectUnionOf(prov:Delegation prov:Derivation prov:End prov:Start))
ObjectPropertyRange(prov:hadActivity prov:Activity)

# Object Property: prov:hadDelegate (hadDelegate)

AnnotationAssertion(rdfs:isDefinedBy prov:hadDelegate <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:hadDelegate "hadDelegate")

# Object Property: prov:hadDerivation (hadDerivation)

AnnotationAssertion(rdfs:isDefinedBy prov:hadDerivation <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:hadDerivation "hadDerivation")
InverseObjectProperties(prov:hadDerivation prov:wasDerivedFrom)

# Object Property: prov:hadDictionaryMember (hadDictionaryMember)

AnnotationAssertion(rdfs:isDefinedBy prov:hadDictionaryMember <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:hadDictionaryMember "hadDictionaryMember")
AnnotationAssertion(prov:category prov:hadDictionaryMember "collections")
AnnotationAssertion(prov:component prov:hadDictionaryMember "collections")
AnnotationAssertion(prov:constraints prov:hadDictionaryMember "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-constraints"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:hadDictionaryMember "Describes the key-entity pair that was member of a prov:Dictionary. A dictionary can have multiple members.")
AnnotationAssertion(prov:dm prov:hadDictionaryMember "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#term-dictionary-membership"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:hadDictionaryMember "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary-membership"^^xsd:anyURI)
ObjectPropertyDomain(prov:hadDictionaryMember prov:Dictionary)
ObjectPropertyRange(prov:hadDictionaryMember prov:KeyEntityPair)

# Object Property: prov:hadGeneration (hadGeneration)

AnnotationAssertion(rdfs:comment prov:hadGeneration "The _optional_ Generation involved in an Entity's Derivation."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:hadGeneration <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:hadGeneration "hadGeneration")
AnnotationAssertion(prov:category prov:hadGeneration "qualified")
AnnotationAssertion(prov:component prov:hadGeneration "derivations")
AnnotationAssertion(prov:inverse prov:hadGeneration "generatedAsDerivation")
AnnotationAssertion(prov:sharesDefinitionWith prov:hadGeneration prov:Generation)
ObjectPropertyDomain(prov:hadGeneration prov:Derivation)
ObjectPropertyRange(prov:hadGeneration prov:Generation)

# Object Property: prov:hadInfluence (hadInfluence)

AnnotationAssertion(rdfs:isDefinedBy prov:hadInfluence <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:hadInfluence "hadInfluence")
InverseObjectProperties(prov:hadInfluence prov:influencer)

# Object Property: prov:hadMember (hadMember)

AnnotationAssertion(rdfs:isDefinedBy prov:hadMember <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:hadMember "hadMember")
AnnotationAssertion(prov:category prov:hadMember "expanded")
AnnotationAssertion(prov:component prov:hadMember "expanded")
AnnotationAssertion(prov:inverse prov:hadMember "wasMemberOf")
AnnotationAssertion(prov:sharesDefinitionWith prov:hadMember prov:Collection)
SubObjectPropertyOf(prov:hadMember prov:wasInfluencedBy)
InverseObjectProperties(prov:hadMember prov:wasMemberOf)
ObjectPropertyDomain(prov:hadMember prov:Collection)
ObjectPropertyRange(Annotation(rdfs:comment "A collection is an entity that provides a structure to some constituents, which are themselves entities. These constituents are said to be member of the collections."@en) Annotation(prov:dm "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-collection") prov:hadMember prov:Entity)

# Object Property: prov:hadPlan (hadPlan)

AnnotationAssertion(rdfs:comment prov:hadPlan "The _optional_ Plan adopted by an Agent in Association with some Activity. Plan specifications are out of the scope of this specification."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:hadPlan <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:hadPlan "hadPlan")
AnnotationAssertion(prov:category prov:hadPlan "qualified")
AnnotationAssertion(prov:component prov:hadPlan "agents-responsibility")
AnnotationAssertion(prov:inverse prov:hadPlan "wasPlanOf")
AnnotationAssertion(prov:sharesDefinitionWith prov:hadPlan prov:Plan)
InverseObjectProperties(prov:hadPlan prov:wasPlanOf)
ObjectPropertyDomain(prov:hadPlan prov:Association)
ObjectPropertyRange(prov:hadPlan prov:Plan)

# Object Property: prov:hadPrimarySource (hadPrimarySource)

AnnotationAssertion(rdfs:isDefinedBy prov:hadPrimarySource <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:hadPrimarySource "hadPrimarySource")
AnnotationAssertion(prov:category prov:hadPrimarySource "expanded")
AnnotationAssertion(prov:component prov:hadPrimarySource "derivations")
AnnotationAssertion(prov:inverse prov:hadPrimarySource "wasPrimarySourceOf")
AnnotationAssertion(prov:qualifiedForm prov:hadPrimarySource prov:PrimarySource)
AnnotationAssertion(prov:qualifiedForm prov:hadPrimarySource prov:qualifiedPrimarySource)
SubObjectPropertyOf(Annotation(rdfs:comment "hadPrimarySource property is a particular case of wasDerivedFrom (see http://www.w3.org/TR/prov-dm/#term-original-source) that aims to give credit to the source that originated some information.") prov:hadPrimarySource prov:wasDerivedFrom)
InverseObjectProperties(prov:hadPrimarySource prov:wasPrimarySourceOf)
ObjectPropertyDomain(prov:hadPrimarySource prov:Entity)
ObjectPropertyRange(prov:hadPrimarySource prov:Entity)

# Object Property: prov:hadRevision (hadRevision)

AnnotationAssertion(rdfs:isDefinedBy prov:hadRevision <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:hadRevision "hadRevision")
InverseObjectProperties(prov:hadRevision prov:wasRevisionOf)

# Object Property: prov:hadRole (hadRole)

AnnotationAssertion(rdfs:comment prov:hadRole "The _optional_ Role that an Entity assumed in the context of an Activity. For example, :baking prov:used :spoon; prov:qualified [ a prov:Usage; prov:entity :spoon; prov:hadRole roles:mixing_implement ]."@en)
AnnotationAssertion(rdfs:comment prov:hadRole "This property has multiple RDFS domains to suit multiple OWL Profiles. See <a href=\"#owl-profile\">PROV-O OWL Profile</a>.")
AnnotationAssertion(rdfs:isDefinedBy prov:hadRole <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:hadRole "hadRole")
AnnotationAssertion(prov:category prov:hadRole "qualified")
AnnotationAssertion(prov:component prov:hadRole "agents-responsibility")
AnnotationAssertion(prov:editorsDefinition prov:hadRole "prov:hadRole references the Role (i.e. the function of an entity with respect to an activity), in the context of an instantaneous usage, generation, association, start, and end."@en)
AnnotationAssertion(prov:inverse prov:hadRole "wasRoleIn")
AnnotationAssertion(prov:sharesDefinitionWith prov:hadRole prov:Role)
InverseObjectProperties(prov:hadRole prov:wasRoleIn)
ObjectPropertyDomain(prov:hadRole prov:Influence)
ObjectPropertyDomain(prov:hadRole ObjectUnionOf(prov:Association prov:InstantaneousEvent))
ObjectPropertyRange(prov:hadRole prov:Role)

# Object Property: prov:hadUsage (hadUsage)

AnnotationAssertion(rdfs:comment prov:hadUsage "The _optional_ Usage involved in an Entity's Derivation."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:hadUsage <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:hadUsage <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:hadUsage "hadUsage")
AnnotationAssertion(prov:category prov:hadUsage "qualified")
AnnotationAssertion(prov:component prov:hadUsage "derivations")
AnnotationAssertion(prov:inverse prov:hadUsage "wasUsedInDerivation")
AnnotationAssertion(prov:sharesDefinitionWith prov:hadUsage prov:Usage)
InverseObjectProperties(prov:hadUsage prov:wasUsedInDerivation)
ObjectPropertyDomain(prov:hadUsage prov:Derivation)
ObjectPropertyRange(prov:hadUsage prov:Usage)

# Object Property: prov:has_anchor (has_anchor)

AnnotationAssertion(rdfs:comment prov:has_anchor "Indicates anchor URI for a potentially dynamic resource instance."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:has_anchor <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:has_anchor "has_anchor")
AnnotationAssertion(prov:aq prov:has_anchor "http://www.w3.org/TR/2013/NOTE-prov-aq-20130430/#resource-represented-as-html"^^xsd:anyURI)
AnnotationAssertion(prov:category prov:has_anchor "access-and-query")
AnnotationAssertion(prov:inverse prov:has_anchor "anchorOf")

# Object Property: prov:has_provenance (has_provenance)

AnnotationAssertion(rdfs:comment prov:has_provenance "Indicates a provenance-URI for a resource; the resource identified by this property presents a provenance record about its subject or anchor resource."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:has_provenance <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:has_provenance "has_provenance")
AnnotationAssertion(prov:aq prov:has_provenance "http://www.w3.org/TR/2013/NOTE-prov-aq-20130430/#resource-represented-as-html"^^xsd:anyURI)
AnnotationAssertion(prov:category prov:has_provenance "access-and-query")
AnnotationAssertion(prov:inverse prov:has_provenance "provenanceOf")

# Object Property: prov:has_query_service (hasProvenanceService)

AnnotationAssertion(rdfs:comment prov:has_query_service "Indicates a provenance query service that can access provenance related to its subject or anchor resource."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:has_query_service <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:has_query_service "hasProvenanceService")
AnnotationAssertion(prov:aq prov:has_query_service "http://www.w3.org/TR/2013/NOTE-prov-aq-20130430/"^^xsd:anyURI)
AnnotationAssertion(prov:category prov:has_query_service "access-and-query")
AnnotationAssertion(prov:inverse prov:has_query_service "provenanceQueryServiceOf")

# Object Property: prov:influenced (influenced)

AnnotationAssertion(rdfs:isDefinedBy prov:influenced <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:isDefinedBy prov:influenced <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:influenced "influenced")
AnnotationAssertion(prov:category prov:influenced "expanded")
AnnotationAssertion(prov:component prov:influenced "agents-responsibility")
AnnotationAssertion(prov:inverse prov:influenced "wasInfluencedBy")
AnnotationAssertion(prov:sharesDefinitionWith prov:influenced prov:Influence)
InverseObjectProperties(prov:influenced prov:wasInfluencedBy)

# Object Property: prov:influencer (influencer)

AnnotationAssertion(rdfs:comment prov:influencer "Subproperties of prov:influencer are used to cite the object of an unqualified PROV-O triple whose predicate is a subproperty of prov:wasInfluencedBy (e.g. prov:used, prov:wasGeneratedBy). prov:influencer is used much like rdf:object is used."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:influencer <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:influencer "influencer")
AnnotationAssertion(prov:category prov:influencer "qualified")
AnnotationAssertion(prov:dm prov:influencer "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-influence"^^xsd:anyURI)
AnnotationAssertion(prov:editorialNote prov:influencer "This property and its subproperties are used in the same way as the rdf:object property, i.e. to reference the object of an unqualified prov:wasInfluencedBy or prov:influenced triple."@en)
AnnotationAssertion(prov:editorsDefinition prov:influencer "This property is used as part of the qualified influence pattern. Subclasses of prov:Influence use these subproperties to reference the resource (Entity, Agent, or Activity) whose influence is being qualified."@en)
AnnotationAssertion(prov:inverse prov:influencer "hadInfluence")
ObjectPropertyDomain(prov:influencer prov:Influence)
ObjectPropertyRange(prov:influencer owl:Thing)

# Object Property: prov:informed (informed)

AnnotationAssertion(rdfs:isDefinedBy prov:informed <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:informed "informed")
InverseObjectProperties(prov:informed prov:wasInformedBy)

# Object Property: prov:insertedKeyEntityPair (insertedKeyEntityPair)

AnnotationAssertion(rdfs:isDefinedBy prov:insertedKeyEntityPair <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:insertedKeyEntityPair "insertedKeyEntityPair")
AnnotationAssertion(prov:category prov:insertedKeyEntityPair "collections")
AnnotationAssertion(prov:component prov:insertedKeyEntityPair "collections")
AnnotationAssertion(prov:constraints prov:insertedKeyEntityPair "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-constraints"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:insertedKeyEntityPair "An object property to refer to the prov:KeyEntityPair inserted into a prov:Dictionary.")
AnnotationAssertion(prov:dm prov:insertedKeyEntityPair "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#term-dictionary-insertion"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:insertedKeyEntityPair "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary-insertion"^^xsd:anyURI)
ObjectPropertyDomain(prov:insertedKeyEntityPair prov:Insertion)
ObjectPropertyRange(prov:insertedKeyEntityPair prov:KeyEntityPair)

# Object Property: prov:invalidated (invalidated)

AnnotationAssertion(rdfs:isDefinedBy prov:invalidated <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:isDefinedBy prov:invalidated <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:invalidated "invalidated")
AnnotationAssertion(prov:category prov:invalidated "expanded")
AnnotationAssertion(prov:component prov:invalidated "entities-activities")
AnnotationAssertion(prov:editorialNote prov:invalidated "prov:invalidated is one of few inverse property defined, to allow Activity-oriented assertions in addition to Entity-oriented assertions."@en)
AnnotationAssertion(prov:inverse prov:invalidated "wasInvalidatedBy")
AnnotationAssertion(prov:sharesDefinitionWith prov:invalidated prov:Invalidation)
SubObjectPropertyOf(prov:invalidated prov:influenced)
InverseObjectProperties(prov:invalidated prov:wasInvalidatedBy)
ObjectPropertyDomain(prov:invalidated prov:Activity)
ObjectPropertyRange(prov:invalidated prov:Entity)

# Object Property: prov:locationOf (locationOf)

AnnotationAssertion(rdfs:isDefinedBy prov:locationOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:locationOf "locationOf")

# Object Property: prov:mentionOf (mentionOf)

AnnotationAssertion(rdfs:comment prov:mentionOf "prov:mentionOf is used to specialize an entity as described in another bundle. It is to be used in conjuction with prov:asInBundle.

prov:asInBundle is used to cite the Bundle in which the generalization was mentioned."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:mentionOf <http://www.w3.org/ns/prov-links#>)
AnnotationAssertion(rdfs:label prov:mentionOf "mentionOf")
AnnotationAssertion(prov:inverse prov:mentionOf "hadMention")
SubObjectPropertyOf(prov:mentionOf prov:specializationOf)
ObjectPropertyDomain(prov:mentionOf prov:Entity)
ObjectPropertyRange(prov:mentionOf prov:Entity)

# Object Property: prov:pairEntity (pairKey)

AnnotationAssertion(rdfs:isDefinedBy prov:pairEntity <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:pairEntity "pairKey")
AnnotationAssertion(prov:category prov:pairEntity "collections")
AnnotationAssertion(prov:component prov:pairEntity "collections")
AnnotationAssertion(prov:constraints prov:pairEntity "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-constraints"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:pairEntity "The value of a KeyEntityPair.")
AnnotationAssertion(prov:dm prov:pairEntity "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#term-dictionary-membership"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:pairEntity "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary-membership"^^xsd:anyURI)
FunctionalObjectProperty(prov:pairEntity)
ObjectPropertyDomain(prov:pairEntity prov:KeyEntityPair)
ObjectPropertyRange(prov:pairEntity prov:Entity)

# Object Property: prov:pingback (provenance pingback)

AnnotationAssertion(rdfs:comment prov:pingback "Relates a resource to a provenance pingback service that may receive additional provenance links about the resource."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:pingback <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:pingback "provenance pingback")
AnnotationAssertion(prov:aq prov:pingback "http://www.w3.org/TR/2013/NOTE-prov-aq-20130430/#provenance-pingback"^^xsd:anyURI)
AnnotationAssertion(prov:category prov:pingback "access-and-query")

# Object Property: prov:qualifiedAssociation (qualifiedAssociation)

AnnotationAssertion(rdfs:comment prov:qualifiedAssociation "If this Activity prov:wasAssociatedWith Agent :ag, then it can qualify the Association using prov:qualifiedAssociation [ a prov:Association;  prov:agent :ag; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedAssociation <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:qualifiedAssociation "qualifiedAssociation")
AnnotationAssertion(prov:category prov:qualifiedAssociation "qualified")
AnnotationAssertion(prov:component prov:qualifiedAssociation "agents-responsibility")
AnnotationAssertion(prov:inverse prov:qualifiedAssociation "qualifiedAssociationOf")
AnnotationAssertion(prov:sharesDefinitionWith prov:qualifiedAssociation prov:Association)
AnnotationAssertion(prov:unqualifiedForm prov:qualifiedAssociation prov:wasAssociatedWith)
SubObjectPropertyOf(prov:qualifiedAssociation prov:qualifiedInfluence)
InverseObjectProperties(prov:qualifiedAssociation prov:qualifiedAssociationOf)
ObjectPropertyDomain(prov:qualifiedAssociation prov:Activity)
ObjectPropertyRange(prov:qualifiedAssociation prov:Association)

# Object Property: prov:qualifiedAssociationOf (qualifiedAssociationOf)

AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedAssociationOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:qualifiedAssociationOf "qualifiedAssociationOf")

# Object Property: prov:qualifiedAttribution (qualifiedAttribution)

AnnotationAssertion(rdfs:comment prov:qualifiedAttribution "If this Entity prov:wasAttributedTo Agent :ag, then it can qualify how it was influenced using prov:qualifiedAttribution [ a prov:Attribution;  prov:agent :ag; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedAttribution <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:qualifiedAttribution "qualifiedAttribution")
AnnotationAssertion(prov:category prov:qualifiedAttribution "qualified")
AnnotationAssertion(prov:component prov:qualifiedAttribution "agents-responsibility")
AnnotationAssertion(prov:inverse prov:qualifiedAttribution "qualifiedAttributionOf")
AnnotationAssertion(prov:sharesDefinitionWith prov:qualifiedAttribution prov:Attribution)
AnnotationAssertion(prov:unqualifiedForm prov:qualifiedAttribution prov:wasAttributedTo)
SubObjectPropertyOf(prov:qualifiedAttribution prov:qualifiedInfluence)
InverseObjectProperties(prov:qualifiedAttribution prov:qualifiedAttributionOf)
ObjectPropertyDomain(prov:qualifiedAttribution prov:Entity)
ObjectPropertyRange(prov:qualifiedAttribution prov:Attribution)

# Object Property: prov:qualifiedAttributionOf (qualifiedAttributionOf)

AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedAttributionOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:qualifiedAttributionOf "qualifiedAttributionOf")

# Object Property: prov:qualifiedCommunication (qualifiedCommunication)

AnnotationAssertion(rdfs:comment prov:qualifiedCommunication "If this Activity prov:wasInformedBy Activity :a, then it can qualify how it was influenced using prov:qualifiedCommunication [ a prov:Communication;  prov:activity :a; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedCommunication <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:qualifiedCommunication "qualifiedCommunication")
AnnotationAssertion(prov:category prov:qualifiedCommunication "qualified")
AnnotationAssertion(prov:component prov:qualifiedCommunication "entities-activities")
AnnotationAssertion(prov:inverse prov:qualifiedCommunication "qualifiedCommunicationOf")
AnnotationAssertion(prov:qualifiedForm prov:qualifiedCommunication prov:Communication)
AnnotationAssertion(prov:sharesDefinitionWith prov:qualifiedCommunication prov:Communication)
SubObjectPropertyOf(prov:qualifiedCommunication prov:qualifiedInfluence)
InverseObjectProperties(prov:qualifiedCommunication prov:qualifiedCommunicationOf)
ObjectPropertyDomain(prov:qualifiedCommunication prov:Activity)
ObjectPropertyRange(prov:qualifiedCommunication prov:Communication)

# Object Property: prov:qualifiedCommunicationOf (qualifiedCommunicationOf)

AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedCommunicationOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:qualifiedCommunicationOf "qualifiedCommunicationOf")

# Object Property: prov:qualifiedDelegation (qualifiedDelegation)

AnnotationAssertion(rdfs:comment prov:qualifiedDelegation "If this Agent prov:actedOnBehalfOf Agent :ag, then it can qualify how with prov:qualifiedResponsibility [ a prov:Responsibility;  prov:agent :ag; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedDelegation <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:qualifiedDelegation "qualifiedDelegation")
AnnotationAssertion(prov:category prov:qualifiedDelegation "qualified")
AnnotationAssertion(prov:component prov:qualifiedDelegation "agents-responsibility")
AnnotationAssertion(prov:inverse prov:qualifiedDelegation "qualifiedDelegationOf")
AnnotationAssertion(prov:sharesDefinitionWith prov:qualifiedDelegation prov:Delegation)
AnnotationAssertion(prov:unqualifiedForm prov:qualifiedDelegation prov:actedOnBehalfOf)
SubObjectPropertyOf(prov:qualifiedDelegation prov:qualifiedInfluence)
InverseObjectProperties(prov:qualifiedDelegation prov:qualifiedDelegationOf)
ObjectPropertyDomain(prov:qualifiedDelegation prov:Agent)
ObjectPropertyRange(prov:qualifiedDelegation prov:Delegation)

# Object Property: prov:qualifiedDelegationOf (qualifiedDelegationOf)

AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedDelegationOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:qualifiedDelegationOf "qualifiedDelegationOf")

# Object Property: prov:qualifiedDerivation (qualifiedDerivation)

AnnotationAssertion(rdfs:comment prov:qualifiedDerivation "If this Entity prov:wasDerivedFrom Entity :e, then it can qualify how it was derived using prov:qualifiedDerivation [ a prov:Derivation;  prov:entity :e; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedDerivation <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:qualifiedDerivation "qualifiedDerivation")
AnnotationAssertion(prov:category prov:qualifiedDerivation "qualified")
AnnotationAssertion(prov:component prov:qualifiedDerivation "derivations")
AnnotationAssertion(prov:inverse prov:qualifiedDerivation "qualifiedDerivationOf")
AnnotationAssertion(prov:sharesDefinitionWith prov:qualifiedDerivation prov:Derivation)
AnnotationAssertion(prov:unqualifiedForm prov:qualifiedDerivation prov:wasDerivedFrom)
SubObjectPropertyOf(prov:qualifiedDerivation prov:qualifiedInfluence)
InverseObjectProperties(prov:qualifiedDerivation prov:qualifiedDerivationOf)
ObjectPropertyDomain(prov:qualifiedDerivation prov:Entity)
ObjectPropertyRange(prov:qualifiedDerivation prov:Derivation)

# Object Property: prov:qualifiedDerivationOf (qualifiedDerivationOf)

AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedDerivationOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:qualifiedDerivationOf "qualifiedDerivationOf")

# Object Property: prov:qualifiedEnd (qualifiedEnd)

AnnotationAssertion(rdfs:comment prov:qualifiedEnd "If this Activity prov:wasEndedBy Entity :e1, then it can qualify how it was ended using prov:qualifiedEnd [ a prov:End;  prov:entity :e1; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedEnd <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:qualifiedEnd "qualifiedEnd")
AnnotationAssertion(prov:category prov:qualifiedEnd "qualified")
AnnotationAssertion(prov:component prov:qualifiedEnd "entities-activities")
AnnotationAssertion(prov:inverse prov:qualifiedEnd "qualifiedEndOf")
AnnotationAssertion(prov:sharesDefinitionWith prov:qualifiedEnd prov:End)
AnnotationAssertion(prov:unqualifiedForm prov:qualifiedEnd prov:wasEndedBy)
SubObjectPropertyOf(prov:qualifiedEnd prov:qualifiedInfluence)
InverseObjectProperties(prov:qualifiedEnd prov:qualifiedEndOf)
ObjectPropertyDomain(prov:qualifiedEnd prov:Activity)
ObjectPropertyRange(prov:qualifiedEnd prov:End)

# Object Property: prov:qualifiedEndOf (qualifiedEndOf)

AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedEndOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:qualifiedEndOf "qualifiedEndOf")

# Object Property: prov:qualifiedGeneration (qualifiedGeneration)

AnnotationAssertion(rdfs:comment prov:qualifiedGeneration "If this Activity prov:generated Entity :e, then it can qualify how it performed the Generation using prov:qualifiedGeneration [ a prov:Generation;  prov:entity :e; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedGeneration <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:qualifiedGeneration "qualifiedGeneration")
AnnotationAssertion(prov:category prov:qualifiedGeneration "qualified")
AnnotationAssertion(prov:component prov:qualifiedGeneration "entities-activities")
AnnotationAssertion(prov:inverse prov:qualifiedGeneration "qualifiedGenerationOf")
AnnotationAssertion(prov:sharesDefinitionWith prov:qualifiedGeneration prov:Generation)
AnnotationAssertion(prov:unqualifiedForm prov:qualifiedGeneration prov:wasGeneratedBy)
SubObjectPropertyOf(prov:qualifiedGeneration prov:qualifiedInfluence)
InverseObjectProperties(prov:qualifiedGeneration prov:qualifiedGenerationOf)
ObjectPropertyDomain(prov:qualifiedGeneration prov:Entity)
ObjectPropertyRange(prov:qualifiedGeneration prov:Generation)

# Object Property: prov:qualifiedGenerationOf (qualifiedGenerationOf)

AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedGenerationOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:qualifiedGenerationOf "qualifiedGenerationOf")

# Object Property: prov:qualifiedInfluence (qualifiedInfluence)

AnnotationAssertion(rdfs:comment prov:qualifiedInfluence "Because prov:qualifiedInfluence is a broad relation, the more specific relations (qualifiedCommunication, qualifiedDelegation, qualifiedEnd, etc.) should be used when applicable."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedInfluence <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:qualifiedInfluence "qualifiedInfluence")
AnnotationAssertion(prov:category prov:qualifiedInfluence "qualified")
AnnotationAssertion(prov:component prov:qualifiedInfluence "derivations")
AnnotationAssertion(prov:inverse prov:qualifiedInfluence "qualifiedInfluenceOf")
AnnotationAssertion(prov:sharesDefinitionWith prov:qualifiedInfluence prov:Influence)
AnnotationAssertion(prov:unqualifiedForm prov:qualifiedInfluence prov:wasInfluencedBy)
InverseObjectProperties(prov:qualifiedInfluence prov:qualifiedInfluenceOf)
ObjectPropertyDomain(prov:qualifiedInfluence ObjectUnionOf(prov:Activity prov:Agent prov:Entity))
ObjectPropertyRange(prov:qualifiedInfluence prov:Influence)

# Object Property: prov:qualifiedInfluenceOf (qualifiedInfluenceOf)

AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedInfluenceOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:qualifiedInfluenceOf "qualifiedInfluenceOf")

# Object Property: prov:qualifiedInsertion (qualifiedInsertion)

AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedInsertion <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:qualifiedInsertion "qualifiedInsertion")
AnnotationAssertion(prov:category prov:qualifiedInsertion "collections")
AnnotationAssertion(prov:component prov:qualifiedInsertion "collections")
AnnotationAssertion(prov:constraints prov:qualifiedInsertion "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-constraints"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:qualifiedInsertion "The dictionary was derived from the other by insertion. prov:qualifiedInsertion shows details of the insertion, in particular the inserted key-entity pairs.")
AnnotationAssertion(prov:dm prov:qualifiedInsertion "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#term-dictionary-insertion"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:qualifiedInsertion "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary-insertion"^^xsd:anyURI)
SubObjectPropertyOf(prov:qualifiedInsertion prov:qualifiedDerivation)
ObjectPropertyDomain(prov:qualifiedInsertion prov:Dictionary)
ObjectPropertyRange(prov:qualifiedInsertion prov:Insertion)

# Object Property: prov:qualifiedInvalidation (qualifiedInvalidation)

AnnotationAssertion(rdfs:comment prov:qualifiedInvalidation "If this Entity prov:wasInvalidatedBy Activity :a, then it can qualify how it was invalidated using prov:qualifiedInvalidation [ a prov:Invalidation;  prov:activity :a; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedInvalidation <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:qualifiedInvalidation "qualifiedInvalidation")
AnnotationAssertion(prov:category prov:qualifiedInvalidation "qualified")
AnnotationAssertion(prov:component prov:qualifiedInvalidation "entities-activities")
AnnotationAssertion(prov:inverse prov:qualifiedInvalidation "qualifiedInvalidationOf")
AnnotationAssertion(prov:sharesDefinitionWith prov:qualifiedInvalidation prov:Invalidation)
AnnotationAssertion(prov:unqualifiedForm prov:qualifiedInvalidation prov:wasInvalidatedBy)
SubObjectPropertyOf(prov:qualifiedInvalidation prov:qualifiedInfluence)
InverseObjectProperties(prov:qualifiedInvalidation prov:qualifiedInvalidationOf)
ObjectPropertyDomain(prov:qualifiedInvalidation prov:Entity)
ObjectPropertyRange(prov:qualifiedInvalidation prov:Invalidation)

# Object Property: prov:qualifiedInvalidationOf (qualifiedInvalidationOf)

AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedInvalidationOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:qualifiedInvalidationOf "qualifiedInvalidationOf")

# Object Property: prov:qualifiedPrimarySource (qualifiedPrimarySource)

AnnotationAssertion(rdfs:comment prov:qualifiedPrimarySource "If this Entity prov:hadPrimarySource Entity :e, then it can qualify how using prov:qualifiedPrimarySource [ a prov:PrimarySource; prov:entity :e; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedPrimarySource <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:qualifiedPrimarySource "qualifiedPrimarySource")
AnnotationAssertion(prov:category prov:qualifiedPrimarySource "qualified")
AnnotationAssertion(prov:component prov:qualifiedPrimarySource "derivations")
AnnotationAssertion(prov:inverse prov:qualifiedPrimarySource "qualifiedSourceOf")
AnnotationAssertion(prov:sharesDefinitionWith prov:qualifiedPrimarySource prov:PrimarySource)
AnnotationAssertion(prov:unqualifiedForm prov:qualifiedPrimarySource prov:hadPrimarySource)
SubObjectPropertyOf(prov:qualifiedPrimarySource prov:qualifiedInfluence)
InverseObjectProperties(prov:qualifiedPrimarySource prov:qualifiedSourceOf)
ObjectPropertyDomain(prov:qualifiedPrimarySource prov:Entity)
ObjectPropertyRange(prov:qualifiedPrimarySource prov:PrimarySource)

# Object Property: prov:qualifiedQuotation (qualifiedQuotation)

AnnotationAssertion(rdfs:comment prov:qualifiedQuotation "If this Entity prov:wasQuotedFrom Entity :e, then it can qualify how using prov:qualifiedQuotation [ a prov:Quotation;  prov:entity :e; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedQuotation <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:qualifiedQuotation "qualifiedQuotation")
AnnotationAssertion(prov:category prov:qualifiedQuotation "qualified")
AnnotationAssertion(prov:component prov:qualifiedQuotation "derivations")
AnnotationAssertion(prov:inverse prov:qualifiedQuotation "qualifiedQuotationOf")
AnnotationAssertion(prov:sharesDefinitionWith prov:qualifiedQuotation prov:Quotation)
AnnotationAssertion(prov:unqualifiedForm prov:qualifiedQuotation prov:wasQuotedFrom)
SubObjectPropertyOf(prov:qualifiedQuotation prov:qualifiedInfluence)
InverseObjectProperties(prov:qualifiedQuotation prov:qualifiedQuotationOf)
ObjectPropertyDomain(prov:qualifiedQuotation prov:Entity)
ObjectPropertyRange(prov:qualifiedQuotation prov:Quotation)

# Object Property: prov:qualifiedQuotationOf (qualifiedQuotationOf)

AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedQuotationOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:qualifiedQuotationOf "qualifiedQuotationOf")

# Object Property: prov:qualifiedRemoval (qualifiedRemoval)

AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedRemoval <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:qualifiedRemoval "qualifiedRemoval")
AnnotationAssertion(prov:category prov:qualifiedRemoval "collections")
AnnotationAssertion(prov:component prov:qualifiedRemoval "collections")
AnnotationAssertion(prov:constraints prov:qualifiedRemoval "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-constraints"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:qualifiedRemoval "The dictionary was derived from the other by removal. prov:qualifiedRemoval shows details of the removal, in particular the removed keys.")
AnnotationAssertion(prov:dm prov:qualifiedRemoval "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#term-dictionary-removal"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:qualifiedRemoval "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary-removal"^^xsd:anyURI)
SubObjectPropertyOf(prov:qualifiedRemoval prov:qualifiedDerivation)
ObjectPropertyDomain(prov:qualifiedRemoval prov:Dictionary)
ObjectPropertyRange(prov:qualifiedRemoval prov:Removal)

# Object Property: prov:qualifiedRevision (qualifiedRevision)

AnnotationAssertion(rdfs:comment prov:qualifiedRevision "If this Entity prov:wasRevisionOf Entity :e, then it can qualify how it was revised using prov:qualifiedRevision [ a prov:Revision;  prov:entity :e; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedRevision <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:qualifiedRevision "qualifiedRevision")
AnnotationAssertion(prov:category prov:qualifiedRevision "qualified")
AnnotationAssertion(prov:component prov:qualifiedRevision "derivations")
AnnotationAssertion(prov:inverse prov:qualifiedRevision "revisedEntity")
AnnotationAssertion(prov:sharesDefinitionWith prov:qualifiedRevision prov:Revision)
AnnotationAssertion(prov:unqualifiedForm prov:qualifiedRevision prov:wasRevisionOf)
SubObjectPropertyOf(prov:qualifiedRevision prov:qualifiedInfluence)
InverseObjectProperties(prov:qualifiedRevision prov:revisedEntity)
ObjectPropertyDomain(prov:qualifiedRevision prov:Entity)
ObjectPropertyRange(prov:qualifiedRevision prov:Revision)

# Object Property: prov:qualifiedSourceOf (qualifiedSourceOf)

AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedSourceOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:qualifiedSourceOf "qualifiedSourceOf")

# Object Property: prov:qualifiedStart (qualifiedStart)

AnnotationAssertion(rdfs:comment prov:qualifiedStart "If this Activity prov:wasStartedBy Entity :e1, then it can qualify how it was started using prov:qualifiedStart [ a prov:Start;  prov:entity :e1; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedStart <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:qualifiedStart "qualifiedStart")
AnnotationAssertion(prov:category prov:qualifiedStart "qualified")
AnnotationAssertion(prov:component prov:qualifiedStart "entities-activities")
AnnotationAssertion(prov:inverse prov:qualifiedStart "qualifiedStartOf")
AnnotationAssertion(prov:sharesDefinitionWith prov:qualifiedStart prov:Start)
AnnotationAssertion(prov:unqualifiedForm prov:qualifiedStart prov:wasStartedBy)
SubObjectPropertyOf(prov:qualifiedStart prov:qualifiedInfluence)
InverseObjectProperties(prov:qualifiedStart prov:qualifiedStartOf)
ObjectPropertyDomain(prov:qualifiedStart prov:Activity)
ObjectPropertyRange(prov:qualifiedStart prov:Start)

# Object Property: prov:qualifiedStartOf (qualifiedStartOf)

AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedStartOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:qualifiedStartOf "qualifiedStartOf")

# Object Property: prov:qualifiedUsage (qualifiedUsage)

AnnotationAssertion(rdfs:comment prov:qualifiedUsage "If this Activity prov:used Entity :e, then it can qualify how it used it using prov:qualifiedUsage [ a prov:Usage; prov:entity :e; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedUsage <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:qualifiedUsage "qualifiedUsage")
AnnotationAssertion(prov:category prov:qualifiedUsage "qualified")
AnnotationAssertion(prov:component prov:qualifiedUsage "entities-activities")
AnnotationAssertion(prov:inverse prov:qualifiedUsage "qualifiedUsingActivity")
AnnotationAssertion(prov:sharesDefinitionWith prov:qualifiedUsage prov:Usage)
AnnotationAssertion(prov:unqualifiedForm prov:qualifiedUsage prov:used)
SubObjectPropertyOf(prov:qualifiedUsage prov:qualifiedInfluence)
InverseObjectProperties(prov:qualifiedUsage prov:qualifiedUsingActivity)
ObjectPropertyDomain(prov:qualifiedUsage prov:Activity)
ObjectPropertyRange(prov:qualifiedUsage prov:Usage)

# Object Property: prov:qualifiedUsingActivity (qualifiedUsingActivity)

AnnotationAssertion(rdfs:isDefinedBy prov:qualifiedUsingActivity <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:qualifiedUsingActivity "qualifiedUsingActivity")

# Object Property: prov:quotedAs (quotedAs)

AnnotationAssertion(rdfs:isDefinedBy prov:quotedAs <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:quotedAs "quotedAs")
InverseObjectProperties(prov:quotedAs prov:wasQuotedFrom)

# Object Property: prov:revisedEntity (revisedEntity)

AnnotationAssertion(rdfs:isDefinedBy prov:revisedEntity <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:revisedEntity "revisedEntity")

# Object Property: prov:specializationOf (specializationOf)

AnnotationAssertion(rdfs:isDefinedBy prov:specializationOf <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:specializationOf <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:specializationOf "specializationOf")
AnnotationAssertion(rdfs:seeAlso prov:specializationOf prov:alternateOf)
AnnotationAssertion(prov:category prov:specializationOf "expanded")
AnnotationAssertion(prov:component prov:specializationOf "alternate")
AnnotationAssertion(prov:constraints prov:specializationOf "http://www.w3.org/TR/2012/WD-prov-dm-20120703/prov-constraints.html#prov-dm-constraints-fig"^^xsd:anyURI)
AnnotationAssertion(prov:constraints prov:specializationOf "http://www.w3.org/TR/2013/REC-prov-constraints-20130430/#prov-dm-constraints-fig"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:specializationOf "An entity that is a specialization of another shares all aspects of the latter, and additionally presents more specific aspects of the same thing as the latter. In particular, the lifetime of the entity being specialized contains that of any specialization. Examples of aspects include a time period, an abstraction, and a context associated with the entity."@en)
AnnotationAssertion(prov:dm prov:specializationOf "http://www.w3.org/TR/2012/WD-prov-dm-20120703/prov-dm.html#term-specialization"^^xsd:anyURI)
AnnotationAssertion(prov:dm prov:specializationOf "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-specialization"^^xsd:anyURI)
AnnotationAssertion(prov:inverse prov:specializationOf "generalizationOf")
AnnotationAssertion(prov:n prov:specializationOf "http://www.w3.org/TR/2012/WD-prov-dm-20120703/prov-n.html#expression-specialization"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:specializationOf "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-specialization"^^xsd:anyURI)
SubObjectPropertyOf(prov:specializationOf owl:topObjectProperty)
SubObjectPropertyOf(prov:specializationOf prov:alternateOf)
ObjectPropertyDomain(prov:specializationOf prov:Entity)

# Object Property: prov:started (started)

AnnotationAssertion(rdfs:isDefinedBy prov:started <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:started "started")
InverseObjectProperties(prov:started prov:wasStartedBy)

# Object Property: prov:used (used)

AnnotationAssertion(rdfs:comment prov:used "A prov:Entity that was used by this prov:Activity. For example, :baking prov:used :spoon, :egg, :oven ."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:used <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:used "used")
AnnotationAssertion(prov:category prov:used "starting-point")
AnnotationAssertion(prov:component prov:used "entities-activities")
AnnotationAssertion(prov:inverse prov:used "wasUsedBy")
AnnotationAssertion(prov:qualifiedForm prov:used prov:Usage)
AnnotationAssertion(prov:qualifiedForm prov:used prov:qualifiedUsage)
SubObjectPropertyOf(prov:used prov:wasInfluencedBy)
InverseObjectProperties(prov:used prov:wasUsedBy)
ObjectPropertyDomain(prov:used prov:Activity)
ObjectPropertyRange(prov:used prov:Entity)

# Object Property: prov:wasActivityOfInfluence (wasActivityOfInfluence)

AnnotationAssertion(rdfs:isDefinedBy prov:wasActivityOfInfluence <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:wasActivityOfInfluence "wasActivityOfInfluence")

# Object Property: prov:wasAssociateFor (wasAssociateFor)

AnnotationAssertion(rdfs:isDefinedBy prov:wasAssociateFor <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:wasAssociateFor "wasAssociateFor")
InverseObjectProperties(prov:wasAssociateFor prov:wasAssociatedWith)

# Object Property: prov:wasAssociatedWith (wasAssociatedWith)

AnnotationAssertion(rdfs:comment prov:wasAssociatedWith "An prov:Agent that had some (unspecified) responsibility for the occurrence of this prov:Activity."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:wasAssociatedWith <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:wasAssociatedWith "wasAssociatedWith")
AnnotationAssertion(prov:category prov:wasAssociatedWith "starting-point")
AnnotationAssertion(prov:component prov:wasAssociatedWith "agents-responsibility")
AnnotationAssertion(prov:inverse prov:wasAssociatedWith "wasAssociateFor")
AnnotationAssertion(prov:qualifiedForm prov:wasAssociatedWith prov:Association)
AnnotationAssertion(prov:qualifiedForm prov:wasAssociatedWith prov:qualifiedAssociation)
SubObjectPropertyOf(prov:wasAssociatedWith prov:wasInfluencedBy)
ObjectPropertyDomain(prov:wasAssociatedWith prov:Activity)
ObjectPropertyRange(prov:wasAssociatedWith prov:Agent)

# Object Property: prov:wasAttributedTo (wasAttributedTo)

AnnotationAssertion(rdfs:comment prov:wasAttributedTo "Attribution is the ascribing of an entity to an agent."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:wasAttributedTo <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:wasAttributedTo "wasAttributedTo")
AnnotationAssertion(prov:category prov:wasAttributedTo "starting-point")
AnnotationAssertion(prov:component prov:wasAttributedTo "agents-responsibility")
AnnotationAssertion(prov:definition prov:wasAttributedTo "Attribution is the ascribing of an entity to an agent."@en)
AnnotationAssertion(prov:inverse prov:wasAttributedTo "contributed")
AnnotationAssertion(prov:qualifiedForm prov:wasAttributedTo prov:Attribution)
AnnotationAssertion(prov:qualifiedForm prov:wasAttributedTo prov:qualifiedAttribution)
SubObjectPropertyOf(Annotation(rdfs:comment "Attribution is a particular case of trace (see http://www.w3.org/TR/prov-dm/#concept-trace), in the sense that it links an entity to the agent that ascribed it.") Annotation(prov:definition "IF wasAttributedTo(e2,ag1,aAttr) holds, THEN wasInfluencedBy(e2,ag1) also holds. ") prov:wasAttributedTo prov:wasInfluencedBy)
ObjectPropertyDomain(prov:wasAttributedTo prov:Entity)
ObjectPropertyRange(prov:wasAttributedTo prov:Agent)

# Object Property: prov:wasDerivedFrom (wasDerivedFrom)

AnnotationAssertion(rdfs:comment prov:wasDerivedFrom "The more specific subproperties of prov:wasDerivedFrom (i.e., prov:wasQuotedFrom, prov:wasRevisionOf, prov:hadPrimarySource) should be used when applicable."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:wasDerivedFrom <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:wasDerivedFrom "wasDerivedFrom")
AnnotationAssertion(prov:category prov:wasDerivedFrom "starting-point")
AnnotationAssertion(prov:component prov:wasDerivedFrom "derivations")
AnnotationAssertion(prov:definition prov:wasDerivedFrom "A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity."@en)
AnnotationAssertion(prov:inverse prov:wasDerivedFrom "hadDerivation")
AnnotationAssertion(prov:qualifiedForm prov:wasDerivedFrom prov:Derivation)
AnnotationAssertion(prov:qualifiedForm prov:wasDerivedFrom prov:qualifiedDerivation)
SubObjectPropertyOf(Annotation(rdfs:comment "Derivation is a particular case of trace (see http://www.w3.org/TR/prov-dm/#term-trace), since it links an entity to another entity that contributed to its existence.") prov:wasDerivedFrom prov:wasInfluencedBy)
ObjectPropertyDomain(prov:wasDerivedFrom prov:Entity)
ObjectPropertyRange(prov:wasDerivedFrom prov:Entity)

# Object Property: prov:wasEndedBy (wasEndedBy)

AnnotationAssertion(rdfs:comment prov:wasEndedBy "End is when an activity is deemed to have ended. An end may refer to an entity, known as trigger, that terminated the activity."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:wasEndedBy <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:wasEndedBy "wasEndedBy")
AnnotationAssertion(prov:category prov:wasEndedBy "expanded")
AnnotationAssertion(prov:component prov:wasEndedBy "entities-activities")
AnnotationAssertion(prov:inverse prov:wasEndedBy "ended")
AnnotationAssertion(prov:qualifiedForm prov:wasEndedBy prov:End)
AnnotationAssertion(prov:qualifiedForm prov:wasEndedBy prov:qualifiedEnd)
SubObjectPropertyOf(prov:wasEndedBy prov:wasInfluencedBy)
ObjectPropertyDomain(prov:wasEndedBy prov:Activity)
ObjectPropertyRange(prov:wasEndedBy prov:Entity)

# Object Property: prov:wasGeneratedBy (wasGeneratedBy)

AnnotationAssertion(rdfs:isDefinedBy prov:wasGeneratedBy <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:isDefinedBy prov:wasGeneratedBy <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:wasGeneratedBy "wasGeneratedBy")
AnnotationAssertion(prov:category prov:wasGeneratedBy "starting-point")
AnnotationAssertion(prov:component prov:wasGeneratedBy "entities-activities")
AnnotationAssertion(prov:inverse prov:wasGeneratedBy "generated")
AnnotationAssertion(prov:qualifiedForm prov:wasGeneratedBy prov:Generation)
AnnotationAssertion(prov:qualifiedForm prov:wasGeneratedBy prov:qualifiedGeneration)
SubObjectPropertyOf(prov:wasGeneratedBy prov:wasInfluencedBy)
ObjectPropertyDomain(prov:wasGeneratedBy prov:Entity)
ObjectPropertyRange(prov:wasGeneratedBy prov:Activity)

# Object Property: prov:wasInfluencedBy (wasInfluencedBy)

AnnotationAssertion(rdfs:comment prov:wasInfluencedBy "Because prov:wasInfluencedBy is a broad relation, its more specific subproperties (e.g. prov:wasInformedBy, prov:actedOnBehalfOf, prov:wasEndedBy, etc.) should be used when applicable."@en)
AnnotationAssertion(rdfs:comment prov:wasInfluencedBy "This property has multiple RDFS domains to suit multiple OWL Profiles. See <a href=\"#owl-profile\">PROV-O OWL Profile</a>.")
AnnotationAssertion(rdfs:isDefinedBy prov:wasInfluencedBy <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:isDefinedBy prov:wasInfluencedBy <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:wasInfluencedBy "wasInfluencedBy")
AnnotationAssertion(prov:category prov:wasInfluencedBy "qualified")
AnnotationAssertion(prov:component prov:wasInfluencedBy "agents-responsibility")
AnnotationAssertion(prov:editorialNote prov:wasInfluencedBy "The sub-properties of prov:wasInfluencedBy can be elaborated in more detail using the Qualification Pattern. For example, the binary relation :baking prov:used :spoon can be qualified by asserting :baking prov:qualifiedUsage [ a prov:Usage; prov:entity :spoon; prov:atLocation :kitchen ] .

Subproperties of prov:wasInfluencedBy may also be asserted directly without being qualified.

prov:wasInfluencedBy should not be used without also using one of its subproperties. 
"@en)
AnnotationAssertion(prov:inverse prov:wasInfluencedBy "influenced")
AnnotationAssertion(prov:qualifiedForm prov:wasInfluencedBy prov:Influence)
AnnotationAssertion(prov:qualifiedForm prov:wasInfluencedBy prov:qualifiedInfluence)
AnnotationAssertion(prov:sharesDefinitionWith prov:wasInfluencedBy prov:Influence)
ObjectPropertyDomain(Annotation(prov:definition "influencee: an identifier (o2) for an entity, activity, or agent; ") Annotation(prov:dm "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-influence") prov:wasInfluencedBy ObjectUnionOf(prov:Activity prov:Agent prov:Entity))
ObjectPropertyRange(Annotation(prov:definition "influencer: an identifier (o1) for an ancestor entity, activity, or agent that the former depends on;") Annotation(prov:dm "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-influence") prov:wasInfluencedBy ObjectUnionOf(prov:Activity prov:Agent prov:Entity))

# Object Property: prov:wasInformedBy (wasInformedBy)

AnnotationAssertion(rdfs:comment prov:wasInformedBy "An activity a2 is dependent on or informed by another activity a1, by way of some unspecified entity that is generated by a1 and used by a2."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:wasInformedBy <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:wasInformedBy "wasInformedBy")
AnnotationAssertion(prov:category prov:wasInformedBy "starting-point")
AnnotationAssertion(prov:component prov:wasInformedBy "entities-activities")
AnnotationAssertion(prov:inverse prov:wasInformedBy "informed")
AnnotationAssertion(prov:qualifiedForm prov:wasInformedBy prov:Communication)
AnnotationAssertion(prov:qualifiedForm prov:wasInformedBy prov:qualifiedCommunication)
SubObjectPropertyOf(prov:wasInformedBy prov:wasInfluencedBy)
ObjectPropertyDomain(prov:wasInformedBy prov:Activity)
ObjectPropertyRange(prov:wasInformedBy prov:Activity)

# Object Property: prov:wasInvalidatedBy (wasInvalidatedBy)

AnnotationAssertion(rdfs:isDefinedBy prov:wasInvalidatedBy <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:isDefinedBy prov:wasInvalidatedBy <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:wasInvalidatedBy "wasInvalidatedBy")
AnnotationAssertion(prov:category prov:wasInvalidatedBy "expanded")
AnnotationAssertion(prov:component prov:wasInvalidatedBy "entities-activities")
AnnotationAssertion(prov:inverse prov:wasInvalidatedBy "invalidated")
AnnotationAssertion(prov:qualifiedForm prov:wasInvalidatedBy prov:Invalidation)
AnnotationAssertion(prov:qualifiedForm prov:wasInvalidatedBy prov:qualifiedInvalidation)
SubObjectPropertyOf(prov:wasInvalidatedBy prov:wasInfluencedBy)
ObjectPropertyDomain(prov:wasInvalidatedBy prov:Entity)
ObjectPropertyRange(prov:wasInvalidatedBy prov:Activity)

# Object Property: prov:wasMemberOf (wasMemberOf)

AnnotationAssertion(rdfs:isDefinedBy prov:wasMemberOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:wasMemberOf "wasMemberOf")

# Object Property: prov:wasPlanOf (wasPlanOf)

AnnotationAssertion(rdfs:isDefinedBy prov:wasPlanOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:wasPlanOf "wasPlanOf")

# Object Property: prov:wasPrimarySourceOf (wasPrimarySourceOf)

AnnotationAssertion(rdfs:isDefinedBy prov:wasPrimarySourceOf <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:wasPrimarySourceOf "wasPrimarySourceOf")

# Object Property: prov:wasQuotedFrom (wasQuotedFrom)

AnnotationAssertion(rdfs:comment prov:wasQuotedFrom "An entity is derived from an original entity by copying, or 'quoting', some or all of it."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:wasQuotedFrom <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:wasQuotedFrom "wasQuotedFrom")
AnnotationAssertion(prov:category prov:wasQuotedFrom "expanded")
AnnotationAssertion(prov:component prov:wasQuotedFrom "derivations")
AnnotationAssertion(prov:inverse prov:wasQuotedFrom "quotedAs")
AnnotationAssertion(prov:qualifiedForm prov:wasQuotedFrom prov:Quotation)
AnnotationAssertion(prov:qualifiedForm prov:wasQuotedFrom prov:qualifiedQuotation)
SubObjectPropertyOf(Annotation(rdfs:comment "Quotation is a particular case of derivation (see http://www.w3.org/TR/prov-dm/#term-quotation) in which an entity is derived from an original entity by copying, or \"quoting\", some or all of it. ") prov:wasQuotedFrom prov:wasDerivedFrom)
ObjectPropertyDomain(prov:wasQuotedFrom prov:Entity)
ObjectPropertyRange(prov:wasQuotedFrom prov:Entity)

# Object Property: prov:wasRevisionOf (wasRevisionOf)

AnnotationAssertion(rdfs:comment prov:wasRevisionOf "A revision is a derivation that revises an entity into a revised version."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:wasRevisionOf <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:wasRevisionOf "wasRevisionOf")
AnnotationAssertion(prov:category prov:wasRevisionOf "expanded")
AnnotationAssertion(prov:component prov:wasRevisionOf "derivations")
AnnotationAssertion(prov:inverse prov:wasRevisionOf "hadRevision")
AnnotationAssertion(prov:qualifiedForm prov:wasRevisionOf prov:Revision)
AnnotationAssertion(prov:qualifiedForm prov:wasRevisionOf prov:qualifiedRevision)
SubObjectPropertyOf(Annotation(rdfs:comment "Revision is a derivation (see http://www.w3.org/TR/prov-dm/#term-Revision). Moreover, according to 
http://www.w3.org/TR/2013/REC-prov-constraints-20130430/#term-Revision 23 April 2012 'wasRevisionOf is a strict sub-relation of wasDerivedFrom since two entities e2 and e1 may satisfy wasDerivedFrom(e2,e1) without being a variant of each other.'") prov:wasRevisionOf prov:wasDerivedFrom)
ObjectPropertyDomain(prov:wasRevisionOf prov:Entity)
ObjectPropertyRange(prov:wasRevisionOf prov:Entity)

# Object Property: prov:wasRoleIn (wasRoleIn)

AnnotationAssertion(rdfs:isDefinedBy prov:wasRoleIn <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:wasRoleIn "wasRoleIn")

# Object Property: prov:wasStartedBy (wasStartedBy)

AnnotationAssertion(rdfs:comment prov:wasStartedBy "Start is when an activity is deemed to have started. A start may refer to an entity, known as trigger, that initiated the activity."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:wasStartedBy <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:wasStartedBy "wasStartedBy")
AnnotationAssertion(prov:category prov:wasStartedBy "expanded")
AnnotationAssertion(prov:component prov:wasStartedBy "entities-activities")
AnnotationAssertion(prov:inverse prov:wasStartedBy "started")
AnnotationAssertion(prov:qualifiedForm prov:wasStartedBy prov:Start)
AnnotationAssertion(prov:qualifiedForm prov:wasStartedBy prov:qualifiedStart)
SubObjectPropertyOf(prov:wasStartedBy prov:wasInfluencedBy)
ObjectPropertyDomain(prov:wasStartedBy prov:Activity)
ObjectPropertyRange(prov:wasStartedBy prov:Entity)

# Object Property: prov:wasUsedBy (wasUsedBy)

AnnotationAssertion(rdfs:isDefinedBy prov:wasUsedBy <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:wasUsedBy "wasUsedBy")

# Object Property: prov:wasUsedInDerivation (wasUsedInDerivation)

AnnotationAssertion(rdfs:isDefinedBy prov:wasUsedInDerivation <http://www.w3.org/ns/prov-o-inverses#>)
AnnotationAssertion(rdfs:label prov:wasUsedInDerivation "wasUsedInDerivation")


############################
#   Data Properties
############################

# Data Property: prov:atTime (atTime)

AnnotationAssertion(rdfs:comment prov:atTime "The time at which an InstantaneousEvent occurred, in the form of xsd:dateTime."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:atTime <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:atTime "atTime")
AnnotationAssertion(prov:category prov:atTime "qualified")
AnnotationAssertion(prov:component prov:atTime "entities-activities")
AnnotationAssertion(prov:sharesDefinitionWith prov:atTime prov:InstantaneousEvent)
AnnotationAssertion(prov:unqualifiedForm prov:atTime prov:endedAtTime)
AnnotationAssertion(prov:unqualifiedForm prov:atTime prov:generatedAtTime)
AnnotationAssertion(prov:unqualifiedForm prov:atTime prov:invalidatedAtTime)
AnnotationAssertion(prov:unqualifiedForm prov:atTime prov:startedAtTime)
DataPropertyDomain(prov:atTime prov:InstantaneousEvent)
DataPropertyRange(prov:atTime xsd:dateTime)

# Data Property: prov:endedAtTime (endedAtTime)

AnnotationAssertion(rdfs:comment prov:endedAtTime "The time at which an activity ended. See also prov:startedAtTime."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:endedAtTime <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:endedAtTime "endedAtTime")
AnnotationAssertion(prov:category prov:endedAtTime "starting-point")
AnnotationAssertion(prov:component prov:endedAtTime "entities-activities")
AnnotationAssertion(prov:editorialNote prov:endedAtTime "It is the intent that the property chain holds: (prov:qualifiedEnd o prov:atTime) rdfs:subPropertyOf prov:endedAtTime."@en)
AnnotationAssertion(prov:qualifiedForm prov:endedAtTime prov:End)
AnnotationAssertion(prov:qualifiedForm prov:endedAtTime prov:atTime)
DataPropertyDomain(prov:endedAtTime prov:Activity)
DataPropertyRange(prov:endedAtTime xsd:dateTime)

# Data Property: prov:generatedAtTime (generatedAtTime)

AnnotationAssertion(rdfs:comment prov:generatedAtTime "The time at which an entity was completely created and is available for use."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:generatedAtTime <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:generatedAtTime "generatedAtTime")
AnnotationAssertion(prov:category prov:generatedAtTime "expanded")
AnnotationAssertion(prov:component prov:generatedAtTime "entities-activities")
AnnotationAssertion(prov:editorialNote prov:generatedAtTime "It is the intent that the property chain holds: (prov:qualifiedGeneration o prov:atTime) rdfs:subPropertyOf prov:generatedAtTime."@en)
AnnotationAssertion(prov:qualifiedForm prov:generatedAtTime prov:Generation)
AnnotationAssertion(prov:qualifiedForm prov:generatedAtTime prov:atTime)
DataPropertyDomain(prov:generatedAtTime prov:Entity)
DataPropertyRange(prov:generatedAtTime xsd:dateTime)

# Data Property: prov:invalidatedAtTime (invalidatedAtTime)

AnnotationAssertion(rdfs:comment prov:invalidatedAtTime "The time at which an entity was invalidated (i.e., no longer usable)."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:invalidatedAtTime <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:invalidatedAtTime "invalidatedAtTime")
AnnotationAssertion(prov:category prov:invalidatedAtTime "expanded")
AnnotationAssertion(prov:component prov:invalidatedAtTime "entities-activities")
AnnotationAssertion(prov:editorialNote prov:invalidatedAtTime "It is the intent that the property chain holds: (prov:qualifiedInvalidation o prov:atTime) rdfs:subPropertyOf prov:invalidatedAtTime."@en)
AnnotationAssertion(prov:qualifiedForm prov:invalidatedAtTime prov:Invalidation)
AnnotationAssertion(prov:qualifiedForm prov:invalidatedAtTime prov:atTime)
DataPropertyDomain(prov:invalidatedAtTime prov:Entity)
DataPropertyRange(prov:invalidatedAtTime xsd:dateTime)

# Data Property: prov:pairKey (pairKey)

AnnotationAssertion(rdfs:isDefinedBy prov:pairKey <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:pairKey "pairKey")
AnnotationAssertion(prov:category prov:pairKey "collections")
AnnotationAssertion(prov:component prov:pairKey "collections")
AnnotationAssertion(prov:constraints prov:pairKey "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-constraints"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:pairKey "The key of a KeyEntityPair, which is an element of a prov:Dictionary.")
AnnotationAssertion(prov:dm prov:pairKey "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#term-dictionary-membership"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:pairKey "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary-membership"^^xsd:anyURI)
FunctionalDataProperty(prov:pairKey)
DataPropertyDomain(prov:pairKey prov:KeyEntityPair)
DataPropertyRange(prov:pairKey rdfs:Literal)

# Data Property: prov:provenanceUriTemplate (provenanceUriTemplate)

AnnotationAssertion(rdfs:comment prov:provenanceUriTemplate "Relates a provenance service to a URI template string for constructing provenance-URIs."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:provenanceUriTemplate <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:provenanceUriTemplate "provenanceUriTemplate")
AnnotationAssertion(prov:aq prov:provenanceUriTemplate "http://www.w3.org/TR/2013/NOTE-prov-aq-20130430/"^^xsd:anyURI)
AnnotationAssertion(prov:category prov:provenanceUriTemplate "access-and-query")

# Data Property: prov:removedKey (removedKey)

AnnotationAssertion(rdfs:isDefinedBy prov:removedKey <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:removedKey "removedKey")
AnnotationAssertion(prov:category prov:removedKey "collections")
AnnotationAssertion(prov:component prov:removedKey "collections")
AnnotationAssertion(prov:constraints prov:removedKey "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-constraints"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:removedKey "The key removed in a Removal.")
AnnotationAssertion(prov:dm prov:removedKey "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#term-dictionary-removal"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:removedKey "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary-removal"^^xsd:anyURI)
DataPropertyDomain(prov:removedKey prov:Removal)
DataPropertyRange(prov:removedKey rdfs:Literal)

# Data Property: prov:startedAtTime (startedAtTime)

AnnotationAssertion(rdfs:comment prov:startedAtTime "The time at which an activity started. See also prov:endedAtTime."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:startedAtTime <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:startedAtTime "startedAtTime")
AnnotationAssertion(prov:category prov:startedAtTime "starting-point")
AnnotationAssertion(prov:component prov:startedAtTime "entities-activities")
AnnotationAssertion(prov:editorialNote prov:startedAtTime "It is the intent that the property chain holds: (prov:qualifiedStart o prov:atTime) rdfs:subPropertyOf prov:startedAtTime."@en)
AnnotationAssertion(prov:qualifiedForm prov:startedAtTime prov:Start)
AnnotationAssertion(prov:qualifiedForm prov:startedAtTime prov:atTime)
DataPropertyDomain(prov:startedAtTime prov:Activity)
DataPropertyRange(prov:startedAtTime xsd:dateTime)

# Data Property: prov:value (value)

AnnotationAssertion(rdfs:isDefinedBy prov:value <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:value "value")
AnnotationAssertion(prov:category prov:value "expanded")
AnnotationAssertion(prov:component prov:value "entities-activities")
AnnotationAssertion(prov:definition prov:value "Provides a value that is a direct representation of an entity."@en)
AnnotationAssertion(prov:dm prov:value "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-attribute-value"^^xsd:anyURI)
AnnotationAssertion(prov:editorialNote prov:value "The editor's definition comes from http://www.w3.org/TR/rdf-primer/#rdfvalue")
AnnotationAssertion(prov:editorialNote prov:value "This property serves the same purpose as rdf:value, but has been reintroduced to avoid some of the definitional ambiguity in the RDF specification (specifically, 'may be used in describing structured values')."@en)
DataPropertyDomain(prov:value prov:Entity)



############################
#   Classes
############################

# Class: prov:Accept (Accept)

AnnotationAssertion(rdfs:label prov:Accept "Accept"@en)
AnnotationAssertion(prov:definition prov:Accept "Activity that identifies the acceptance of a resource (e.g., an article in a conference)"@en)
SubClassOf(prov:Accept prov:Activity)

# Class: prov:Activity (Activity)

AnnotationAssertion(rdfs:isDefinedBy prov:Activity <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Activity "Activity")
AnnotationAssertion(prov:category prov:Activity "starting-point")
AnnotationAssertion(prov:component prov:Activity "entities-activities")
AnnotationAssertion(prov:constraints prov:Activity "http://www.w3.org/TR/2013/REC-prov-constraints-20130430/#prov-dm-constraints-fig"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:Activity "An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities.")
AnnotationAssertion(prov:dm prov:Activity "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-Activity"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Activity "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-Activity"^^xsd:anyURI)
DisjointClasses(prov:Activity prov:Entity)

# Class: prov:ActivityInfluence (ActivityInfluence)

AnnotationAssertion(rdfs:comment prov:ActivityInfluence "ActivityInfluence provides additional descriptions of an Activity's binary influence upon any other kind of resource. Instances of ActivityInfluence use the prov:activity property to cite the influencing Activity."@en)
AnnotationAssertion(rdfs:comment prov:ActivityInfluence "It is not recommended that the type ActivityInfluence be asserted without also asserting one of its more specific subclasses."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:ActivityInfluence <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:ActivityInfluence "ActivityInfluence")
AnnotationAssertion(rdfs:seeAlso prov:ActivityInfluence prov:activity)
AnnotationAssertion(prov:category prov:ActivityInfluence "qualified")
AnnotationAssertion(prov:editorsDefinition prov:ActivityInfluence "ActivitiyInfluence is the capacity of an activity to have an effect on the character, development, or behavior of another by means of generation, invalidation, communication, or other."@en)
SubClassOf(prov:ActivityInfluence prov:Influence)
SubClassOf(prov:ActivityInfluence ObjectMaxCardinality(0 prov:hadActivity))
DisjointClasses(prov:ActivityInfluence prov:EntityInfluence)

# Class: prov:Agent (Agent)

AnnotationAssertion(rdfs:isDefinedBy prov:Agent <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Agent "Agent")
AnnotationAssertion(prov:category prov:Agent "starting-point")
AnnotationAssertion(prov:component prov:Agent "agents-responsibility")
AnnotationAssertion(prov:definition prov:Agent "An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity. "@en)
AnnotationAssertion(prov:dm prov:Agent "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-agent"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Agent "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-Agent"^^xsd:anyURI)
DisjointClasses(prov:Agent prov:InstantaneousEvent)

# Class: prov:AgentInfluence (AgentInfluence)

AnnotationAssertion(rdfs:comment prov:AgentInfluence "AgentInfluence provides additional descriptions of an Agent's binary influence upon any other kind of resource. Instances of AgentInfluence use the prov:agent property to cite the influencing Agent."@en)
AnnotationAssertion(rdfs:comment prov:AgentInfluence "It is not recommended that the type AgentInfluence be asserted without also asserting one of its more specific subclasses."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:AgentInfluence <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:AgentInfluence "AgentInfluence")
AnnotationAssertion(rdfs:seeAlso prov:AgentInfluence prov:agent)
AnnotationAssertion(prov:category prov:AgentInfluence "qualified")
AnnotationAssertion(prov:editorsDefinition prov:AgentInfluence "AgentInfluence is the capacity of an agent to have an effect on the character, development, or behavior of another by means of attribution, association, delegation, or other."@en)
SubClassOf(prov:AgentInfluence prov:Influence)

# Class: prov:Association (Association)

AnnotationAssertion(rdfs:comment prov:Association "An instance of prov:Association provides additional descriptions about the binary prov:wasAssociatedWith relation from an prov:Activity to some prov:Agent that had some responsiblity for it. For example, :baking prov:wasAssociatedWith :baker; prov:qualifiedAssociation [ a prov:Association; prov:agent :baker; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:Association <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Association "Association")
AnnotationAssertion(prov:category prov:Association "qualified")
AnnotationAssertion(prov:component prov:Association "agents-responsibility")
AnnotationAssertion(prov:definition prov:Association "An activity association is an assignment of responsibility to an agent for an activity, indicating that the agent had a role in the activity. It further allows for a plan to be specified, which is the plan intended by the agent to achieve some goals in the context of this activity."@en)
AnnotationAssertion(prov:dm prov:Association "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-Association"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Association "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-Association"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:Association prov:wasAssociatedWith)
SubClassOf(prov:Association prov:AgentInfluence)

# Class: prov:Attribution (Attribution)

AnnotationAssertion(rdfs:comment prov:Attribution "An instance of prov:Attribution provides additional descriptions about the binary prov:wasAttributedTo relation from an prov:Entity to some prov:Agent that had some responsible for it. For example, :cake prov:wasAttributedTo :baker; prov:qualifiedAttribution [ a prov:Attribution; prov:entity :baker; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:Attribution <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Attribution "Attribution")
AnnotationAssertion(prov:category prov:Attribution "qualified")
AnnotationAssertion(prov:component prov:Attribution "agents-responsibility")
AnnotationAssertion(prov:constraints prov:Attribution "http://www.w3.org/TR/2013/REC-prov-constraints-20130430/#prov-dm-constraints-fig"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:Attribution "Attribution is the ascribing of an entity to an agent.

When an entity e is attributed to agent ag, entity e was generated by some unspecified activity that in turn was associated to agent ag. Thus, this relation is useful when the activity is not known, or irrelevant."@en)
AnnotationAssertion(prov:dm prov:Attribution "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-attribution"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Attribution "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-attribution"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:Attribution prov:wasAttributedTo)
SubClassOf(prov:Attribution prov:AgentInfluence)

# Class: prov:Bundle (Bundle)

AnnotationAssertion(rdfs:comment prov:Bundle "Note that there are kinds of bundles (e.g. handwritten letters, audio recordings, etc.) that are not expressed in PROV-O, but can be still be described by PROV-O."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:Bundle <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Bundle "Bundle")
AnnotationAssertion(prov:category prov:Bundle "expanded")
AnnotationAssertion(prov:definition prov:Bundle "A bundle is a named set of provenance descriptions, and is itself an Entity, so allowing provenance of provenance to be expressed."@en)
AnnotationAssertion(prov:dm prov:Bundle "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-bundle-entity"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Bundle "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-bundle-declaration"^^xsd:anyURI)
SubClassOf(prov:Bundle prov:Entity)

# Class: prov:Collection (Collection)

AnnotationAssertion(rdfs:isDefinedBy prov:Collection <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Collection "Collection")
AnnotationAssertion(prov:category prov:Collection "expanded")
AnnotationAssertion(prov:component prov:Collection "collections")
AnnotationAssertion(prov:definition prov:Collection "A collection is an entity that provides a structure to some constituents, which are themselves entities. These constituents are said to be member of the collections."@en)
AnnotationAssertion(prov:dm prov:Collection "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-collection"^^xsd:anyURI)
SubClassOf(prov:Collection prov:Entity)

# Class: prov:Communication (Communication)

AnnotationAssertion(rdfs:comment prov:Communication "An instance of prov:Communication provides additional descriptions about the binary prov:wasInformedBy relation from an informed prov:Activity to the prov:Activity that informed it. For example, :you_jumping_off_bridge prov:wasInformedBy :everyone_else_jumping_off_bridge; prov:qualifiedCommunication [ a prov:Communication; prov:activity :everyone_else_jumping_off_bridge; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:Communication <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Communication "Communication")
AnnotationAssertion(prov:category prov:Communication "qualified")
AnnotationAssertion(prov:component prov:Communication "entities-activities")
AnnotationAssertion(prov:constraints prov:Communication "http://www.w3.org/TR/2013/REC-prov-constraints-20130430/#prov-dm-constraints-fig"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:Communication "Communication is the exchange of an entity by two activities, one activity using the entity generated by the other.")
AnnotationAssertion(prov:dm prov:Communication "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-Communication"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Communication "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-wasInformedBy"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:Communication prov:wasInformedBy)
SubClassOf(prov:Communication prov:ActivityInfluence)

# Class: prov:Contribute (Contribute
# )

AnnotationAssertion(rdfs:label prov:Contribute "Contribute
"@en)
AnnotationAssertion(prov:definition prov:Contribute "Activity that identifies any contribution of an agent to a resource. "@en)
SubClassOf(prov:Contribute prov:Activity)

# Class: prov:Contributor (Contributor)

AnnotationAssertion(rdfs:label prov:Contributor "Contributor"@en)
AnnotationAssertion(prov:definition prov:Contributor "Role with the function of having responsibility for making contributions to a resource. The Agent assigned to this role is associated with a Modify or Create Activities"@en)
SubClassOf(prov:Contributor prov:Role)

# Class: prov:Copyright (Copyright)

AnnotationAssertion(rdfs:label prov:Copyright "Copyright"@en)
AnnotationAssertion(prov:definition prov:Copyright "Activity that identifies the Copyrighting activity associated to a resource."@en)
SubClassOf(prov:Copyright prov:Activity)

# Class: prov:Create (Create)

AnnotationAssertion(rdfs:label prov:Create "Create"@en)
AnnotationAssertion(prov:definition prov:Create "Activity that identifies the creation of a resource"@en)
SubClassOf(prov:Create prov:Contribute)

# Class: prov:Creator (Creator)

AnnotationAssertion(rdfs:label prov:Creator "Creator"@en)
AnnotationAssertion(prov:definition prov:Creator "Role with the function of creating a resource. The Agent assigned to this role is associated with a Create Activity"@en)
SubClassOf(prov:Creator prov:Contributor)

# Class: prov:Delegation (Delegation)

AnnotationAssertion(rdfs:comment prov:Delegation "An instance of prov:Delegation provides additional descriptions about the binary prov:actedOnBehalfOf relation from a performing prov:Agent to some prov:Agent for whom it was performed. For example, :mixing prov:wasAssociatedWith :toddler . :toddler prov:actedOnBehalfOf :mother; prov:qualifiedDelegation [ a prov:Delegation; prov:entity :mother; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:Delegation <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Delegation "Delegation")
AnnotationAssertion(prov:category prov:Delegation "qualified")
AnnotationAssertion(prov:component prov:Delegation "agents-responsibility")
AnnotationAssertion(prov:definition prov:Delegation "Delegation is the assignment of authority and responsibility to an agent (by itself or by another agent) to carry out a specific activity as a delegate or representative, while the agent it acts on behalf of retains some responsibility for the outcome of the delegated work.

For example, a student acted on behalf of his supervisor, who acted on behalf of the department chair, who acted on behalf of the university; all those agents are responsible in some way for the activity that took place but we do not say explicitly who bears responsibility and to what degree."@en)
AnnotationAssertion(prov:dm prov:Delegation "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-delegation"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Delegation "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-delegation"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:Delegation prov:actedOnBehalfOf)
SubClassOf(prov:Delegation prov:AgentInfluence)

# Class: prov:Derivation (Derivation)

AnnotationAssertion(rdfs:comment prov:Derivation "An instance of prov:Derivation provides additional descriptions about the binary prov:wasDerivedFrom relation from some derived prov:Entity to another prov:Entity from which it was derived. For example, :chewed_bubble_gum prov:wasDerivedFrom :unwrapped_bubble_gum; prov:qualifiedDerivation [ a prov:Derivation; prov:entity :unwrapped_bubble_gum; :foo :bar ]."@en)
AnnotationAssertion(rdfs:comment prov:Derivation "The more specific forms of prov:Derivation (i.e., prov:Revision, prov:Quotation, prov:PrimarySource) should be asserted if they apply."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:Derivation <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Derivation "Derivation")
AnnotationAssertion(prov:category prov:Derivation "qualified")
AnnotationAssertion(prov:component prov:Derivation "derivations")
AnnotationAssertion(prov:constraints prov:Derivation "http://www.w3.org/TR/2013/REC-prov-constraints-20130430/#prov-dm-constraints-fig"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:Derivation "A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity."@en)
AnnotationAssertion(prov:dm prov:Derivation "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-Derivation"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Derivation "http://www.w3.org/TR/2013/REC-prov-n-20130430/#Derivation-Relation"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:Derivation prov:wasDerivedFrom)
SubClassOf(prov:Derivation prov:EntityInfluence)

# Class: prov:Dictionary (Dictionary)

AnnotationAssertion(rdfs:comment prov:Dictionary "A given dictionary forms a given structure for its members. A different structure (obtained either by insertion or removal of members) constitutes a different dictionary.")
AnnotationAssertion(rdfs:comment prov:Dictionary "This concept allows for the provenance of the dictionary, but also of its constituents to be expressed. Such a notion of dictionary corresponds to a wide variety of concrete data structures, such as a maps or associative arrays.")
AnnotationAssertion(rdfs:isDefinedBy prov:Dictionary <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:Dictionary "Dictionary")
AnnotationAssertion(prov:category prov:Dictionary "collections")
AnnotationAssertion(prov:component prov:Dictionary "collections")
AnnotationAssertion(prov:constraints prov:Dictionary "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-constraints"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:Dictionary "A dictionary is an entity that provides a structure to some constituents, which are themselves entities. These constituents are said to be member of the dictionary.")
AnnotationAssertion(prov:dm prov:Dictionary "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-conceptual-definition"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Dictionary "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary"^^xsd:anyURI)

# Class: prov:DirectQueryService (ProvenanceService)

AnnotationAssertion(rdfs:comment prov:DirectQueryService "Type for a generic provenance query service. Mainly for use in RDF provenance query service descriptions, to facilitate discovery in linked data environments.")
AnnotationAssertion(rdfs:isDefinedBy prov:DirectQueryService <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:DirectQueryService "ProvenanceService")
AnnotationAssertion(prov:aq prov:DirectQueryService "http://www.w3.org/TR/2013/NOTE-prov-aq-20130430/#provenance-query-service-discovery"^^xsd:anyURI)
AnnotationAssertion(prov:category prov:DirectQueryService "access-and-query")
SubClassOf(prov:DirectQueryService prov:SoftwareAgent)

# Class: prov:EmptyCollection (EmptyCollection)

AnnotationAssertion(rdfs:isDefinedBy prov:EmptyCollection <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:EmptyCollection "EmptyCollection"@en)
AnnotationAssertion(prov:category prov:EmptyCollection "expanded")
AnnotationAssertion(prov:component prov:EmptyCollection "collections")
AnnotationAssertion(prov:definition prov:EmptyCollection "An empty collection is a collection without members."@en)
SubClassOf(prov:EmptyCollection prov:Collection)

# Class: prov:EmptyDictionary (Empty Dictionary)

AnnotationAssertion(rdfs:isDefinedBy prov:EmptyDictionary <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:EmptyDictionary "Empty Dictionary")
AnnotationAssertion(prov:category prov:EmptyDictionary "collections")
AnnotationAssertion(prov:component prov:EmptyDictionary "collections")
AnnotationAssertion(prov:constraints prov:EmptyDictionary "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-constraints"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:EmptyDictionary "An empty dictionary (i.e. has no members).")
AnnotationAssertion(prov:dm prov:EmptyDictionary "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-conceptual-definition"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:EmptyDictionary "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary"^^xsd:anyURI)
SubClassOf(prov:EmptyDictionary prov:Dictionary)
SubClassOf(prov:EmptyDictionary prov:EmptyCollection)

# Class: prov:End (End)

AnnotationAssertion(rdfs:comment prov:End "An instance of prov:End provides additional descriptions about the binary prov:wasEndedBy relation from some ended prov:Activity to an prov:Entity that ended it. For example, :ball_game prov:wasEndedBy :buzzer; prov:qualifiedEnd [ a prov:End; prov:entity :buzzer; :foo :bar; prov:atTime '2012-03-09T08:05:08-05:00'^^xsd:dateTime ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:End <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:End "End")
AnnotationAssertion(prov:category prov:End "qualified")
AnnotationAssertion(prov:component prov:End "entities-activities")
AnnotationAssertion(prov:constraints prov:End "http://www.w3.org/TR/2013/REC-prov-constraints-20130430/#prov-dm-constraints-fig"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:End "End is when an activity is deemed to have been ended by an entity, known as trigger. The activity no longer exists after its end. Any usage, generation, or invalidation involving an activity precedes the activity's end. An end may refer to a trigger entity that terminated the activity, or to an activity, known as ender that generated the trigger."@en)
AnnotationAssertion(prov:dm prov:End "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-End"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:End "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-End"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:End prov:wasEndedBy)
SubClassOf(prov:End prov:EntityInfluence)
SubClassOf(prov:End prov:InstantaneousEvent)

# Class: prov:Entity (Entity)

AnnotationAssertion(rdfs:isDefinedBy prov:Entity <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Entity "Entity")
AnnotationAssertion(prov:category prov:Entity "starting-point")
AnnotationAssertion(prov:component prov:Entity "entities-activities")
AnnotationAssertion(prov:constraints prov:Entity "http://www.w3.org/TR/2013/REC-prov-constraints-20130430/#prov-dm-constraints-fig"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:Entity "An entity is a physical, digital, conceptual, or other kind of thing with some fixed aspects; entities may be real or imaginary. "@en)
AnnotationAssertion(prov:dm prov:Entity "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-entity"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Entity "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-Entity"^^xsd:anyURI)
DisjointClasses(prov:Entity prov:InstantaneousEvent)

# Class: prov:EntityInfluence (EntityInfluence)

AnnotationAssertion(rdfs:comment prov:EntityInfluence "EntityInfluence provides additional descriptions of an Entity's binary influence upon any other kind of resource. Instances of EntityInfluence use the prov:entity property to cite the influencing Entity."@en)
AnnotationAssertion(rdfs:comment prov:EntityInfluence "It is not recommended that the type EntityInfluence be asserted without also asserting one of its more specific subclasses."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:EntityInfluence <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:EntityInfluence "EntityInfluence")
AnnotationAssertion(rdfs:seeAlso prov:EntityInfluence prov:entity)
AnnotationAssertion(prov:category prov:EntityInfluence "qualified")
AnnotationAssertion(prov:editorsDefinition prov:EntityInfluence "EntityInfluence is the capacity of an entity to have an effect on the character, development, or behavior of another by means of usage, start, end, derivation, or other. "@en)
SubClassOf(prov:EntityInfluence prov:Influence)

# Class: prov:Generation (Generation)

AnnotationAssertion(rdfs:comment prov:Generation "An instance of prov:Generation provides additional descriptions about the binary prov:wasGeneratedBy relation from a generated prov:Entity to the prov:Activity that generated it. For example, :cake prov:wasGeneratedBy :baking; prov:qualifiedGeneration [ a prov:Generation; prov:activity :baking; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:Generation <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Generation "Generation")
AnnotationAssertion(prov:category prov:Generation "qualified")
AnnotationAssertion(prov:component prov:Generation "entities-activities")
AnnotationAssertion(prov:constraints prov:Generation "http://www.w3.org/TR/2013/REC-prov-constraints-20130430/#prov-dm-constraints-fig"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:Generation "Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation."@en)
AnnotationAssertion(prov:dm prov:Generation "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-Generation"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Generation "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-Generation"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:Generation prov:wasGeneratedBy)
SubClassOf(prov:Generation prov:ActivityInfluence)
SubClassOf(prov:Generation prov:InstantaneousEvent)

# Class: prov:Influence (Influence)

AnnotationAssertion(rdfs:comment prov:Influence "An instance of prov:Influence provides additional descriptions about the binary prov:wasInfluencedBy relation from some influenced Activity, Entity, or Agent to the influencing Activity, Entity, or Agent. For example, :stomach_ache prov:wasInfluencedBy :spoon; prov:qualifiedInfluence [ a prov:Influence; prov:entity :spoon; :foo :bar ] . Because prov:Influence is a broad relation, the more specific relations (Communication, Delegation, End, etc.) should be used when applicable."@en)
AnnotationAssertion(rdfs:comment prov:Influence "Because prov:Influence is a broad relation, its most specific subclasses (e.g. prov:Communication, prov:Delegation, prov:End, prov:Revision, etc.) should be used when applicable."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:Influence <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Influence "Influence")
AnnotationAssertion(prov:category prov:Influence "qualified")
AnnotationAssertion(prov:component prov:Influence "derivations")
AnnotationAssertion(prov:definition prov:Influence "Influence is the capacity of an entity, activity, or agent to have an effect on the character, development, or behavior of another by means of usage, start, end, generation, invalidation, communication, derivation, attribution, association, or delegation."@en)
AnnotationAssertion(prov:dm prov:Influence "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-influence"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Influence "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-influence"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:Influence prov:wasInfluencedBy)

# Class: prov:Insertion (Insertion)

AnnotationAssertion(rdfs:isDefinedBy prov:Insertion <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:Insertion "Insertion")
AnnotationAssertion(prov:category prov:Insertion "collections")
AnnotationAssertion(prov:component prov:Insertion "collections")
AnnotationAssertion(prov:constraints prov:Insertion "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-constraints"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:Insertion "Insertion is a derivation that transforms a dictionary into another, by insertion of one or more key-entity pairs.")
AnnotationAssertion(prov:dm prov:Insertion "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#term-dictionary-insertion"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Insertion "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary-insertion"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:Insertion prov:derivedByInsertionFrom)
SubClassOf(prov:Insertion prov:Derivation)
SubClassOf(prov:Insertion ObjectMinCardinality(1 prov:insertedKeyEntityPair))
SubClassOf(prov:Insertion ObjectExactCardinality(1 prov:dictionary))

# Class: prov:InstantaneousEvent (InstantaneousEvent)

AnnotationAssertion(rdfs:comment prov:InstantaneousEvent "An instantaneous event, or event for short, happens in the world and marks a change in the world, in its activities and in its entities. The term 'event' is commonly used in process algebra with a similar meaning. Events represent communications or interactions; they are assumed to be atomic and instantaneous."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:InstantaneousEvent <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:InstantaneousEvent "InstantaneousEvent")
AnnotationAssertion(prov:category prov:InstantaneousEvent "qualified")
AnnotationAssertion(prov:component prov:InstantaneousEvent "entities-activities")
AnnotationAssertion(prov:constraints prov:InstantaneousEvent "http://www.w3.org/TR/2013/REC-prov-constraints-20130430/#dfn-event"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:InstantaneousEvent "The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics."@en)

# Class: prov:Invalidation (Invalidation)

AnnotationAssertion(rdfs:comment prov:Invalidation "An instance of prov:Invalidation provides additional descriptions about the binary prov:wasInvalidatedBy relation from an invalidated prov:Entity to the prov:Activity that invalidated it. For example, :uncracked_egg prov:wasInvalidatedBy :baking; prov:qualifiedInvalidation [ a prov:Invalidation; prov:activity :baking; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:Invalidation <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Invalidation "Invalidation")
AnnotationAssertion(prov:category prov:Invalidation "qualified")
AnnotationAssertion(prov:component prov:Invalidation "entities-activities")
AnnotationAssertion(prov:constraints prov:Invalidation "http://www.w3.org/TR/2013/REC-prov-constraints-20130430/#prov-dm-constraints-fig"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:Invalidation "Invalidation is the start of the destruction, cessation, or expiry of an existing entity by an activity. The entity is no longer available for use (or further invalidation) after invalidation. Any generation or usage of an entity precedes its invalidation.")
AnnotationAssertion(prov:dm prov:Invalidation "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-Invalidation"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Invalidation "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-Invalidation"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:Invalidation prov:wasInvalidatedBy)
SubClassOf(prov:Invalidation prov:ActivityInfluence)
SubClassOf(prov:Invalidation prov:InstantaneousEvent)

# Class: prov:KeyEntityPair (Key-Entity Pair)

AnnotationAssertion(rdfs:isDefinedBy prov:KeyEntityPair <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:KeyEntityPair "Key-Entity Pair")
AnnotationAssertion(prov:category prov:KeyEntityPair "collections")
AnnotationAssertion(prov:component prov:KeyEntityPair "collections")
AnnotationAssertion(prov:constraints prov:KeyEntityPair "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-constraints"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:KeyEntityPair "A key-entity pair. Part of a prov:Dictionary through prov:hadDictionaryMember. The key is any RDF Literal, the value is a prov:Entity.")
AnnotationAssertion(prov:dm prov:KeyEntityPair "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#term-dictionary-membership"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:KeyEntityPair "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary-membership"^^xsd:anyURI)
SubClassOf(prov:KeyEntityPair ObjectExactCardinality(1 prov:pairEntity))
SubClassOf(prov:KeyEntityPair DataExactCardinality(1 prov:pairKey))

# Class: prov:Location (Location)

AnnotationAssertion(rdfs:isDefinedBy prov:Location <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Location "Location")
AnnotationAssertion(rdfs:seeAlso prov:Location prov:atLocation)
AnnotationAssertion(prov:category prov:Location "expanded")
AnnotationAssertion(prov:definition prov:Location "A location can be an identifiable geographic place (ISO 19112), but it can also be a non-geographic place such as a directory, row, or column. As such, there are numerous ways in which location can be expressed, such as by a coordinate, address, landmark, and so forth."@en)
AnnotationAssertion(prov:dm prov:Location "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-attribute-location"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Location "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-attribute"^^xsd:anyURI)

# Class: prov:Modify (Modify)

AnnotationAssertion(rdfs:label prov:Modify "Modify"@en)
AnnotationAssertion(prov:definition prov:Modify "Activity that identifies the modification of a resource. "@en)
SubClassOf(prov:Modify prov:Activity)

# Class: prov:Organization (Organization)

AnnotationAssertion(rdfs:isDefinedBy prov:Organization <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Organization "Organization")
AnnotationAssertion(prov:category prov:Organization "expanded")
AnnotationAssertion(prov:component prov:Organization "agents-responsibility")
AnnotationAssertion(prov:definition prov:Organization "An organization is a social or legal institution such as a company, society, etc.")
AnnotationAssertion(prov:dm prov:Organization "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-agent"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Organization "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-types"^^xsd:anyURI)
SubClassOf(prov:Organization prov:Agent)

# Class: prov:Person (Person)

AnnotationAssertion(rdfs:isDefinedBy prov:Person <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Person "Person")
AnnotationAssertion(prov:category prov:Person "expanded")
AnnotationAssertion(prov:component prov:Person "agents-responsibility")
AnnotationAssertion(prov:definition prov:Person "Person agents are people."@en)
AnnotationAssertion(prov:dm prov:Person "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-agent"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Person "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-types"^^xsd:anyURI)
SubClassOf(prov:Person prov:Agent)

# Class: prov:Plan (Plan)

AnnotationAssertion(rdfs:comment prov:Plan "There exist no prescriptive requirement on the nature of plans, their representation, the actions or steps they consist of, or their intended goals. Since plans may evolve over time, it may become necessary to track their provenance, so plans themselves are entities. Representing the plan explicitly in the provenance can be useful for various tasks: for example, to validate the execution as represented in the provenance record, to manage expectation failures, or to provide explanations."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:Plan <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Plan "Plan")
AnnotationAssertion(prov:category prov:Plan "expanded")
AnnotationAssertion(prov:category prov:Plan "qualified")
AnnotationAssertion(prov:component prov:Plan "agents-responsibility")
AnnotationAssertion(prov:definition prov:Plan "A plan is an entity that represents a set of actions or steps intended by one or more agents to achieve some goals.")
AnnotationAssertion(prov:dm prov:Plan "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-Association"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Plan "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-Association"^^xsd:anyURI)
SubClassOf(prov:Plan prov:Entity)

# Class: prov:PrimarySource (PrimarySource)

AnnotationAssertion(rdfs:comment prov:PrimarySource "An instance of prov:PrimarySource provides additional descriptions about the binary prov:hadPrimarySource relation from some secondary prov:Entity to an earlier, primary prov:Entity. For example, :blog prov:hadPrimarySource :newsArticle; prov:qualifiedPrimarySource [ a prov:PrimarySource; prov:entity :newsArticle; :foo :bar ] ."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:PrimarySource <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:PrimarySource "PrimarySource")
AnnotationAssertion(prov:category prov:PrimarySource "qualified")
AnnotationAssertion(prov:component prov:PrimarySource "derivations")
AnnotationAssertion(prov:definition prov:PrimarySource "A primary source for a topic refers to something produced by some agent with direct experience and knowledge about the topic, at the time of the topic's study, without benefit from hindsight.

Because of the directness of primary sources, they 'speak for themselves' in ways that cannot be captured through the filter of secondary sources. As such, it is important for secondary sources to reference those primary sources from which they were derived, so that their reliability can be investigated.

A primary source relation is a particular case of derivation of secondary materials from their primary sources. It is recognized that the determination of primary sources can be up to interpretation, and should be done according to conventions accepted within the application's domain."@en)
AnnotationAssertion(prov:dm prov:PrimarySource "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-primary-source"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:PrimarySource "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-original-source"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:PrimarySource prov:hadPrimarySource)
SubClassOf(prov:PrimarySource prov:Derivation)

# Class: prov:Publish (Publish)

AnnotationAssertion(rdfs:label prov:Publish "Publish"@en)
AnnotationAssertion(prov:definition prov:Publish "Activity that identifies the publication of a resource"@en)
SubClassOf(prov:Publish prov:Activity)

# Class: prov:Publisher (Publisher)

AnnotationAssertion(rdfs:label prov:Publisher "Publisher"@en)
AnnotationAssertion(prov:definition prov:Publisher "Role with the function of publishing a resource. The Agent assigned to this role is associated with a Publish Activity"@en)
SubClassOf(prov:Publisher prov:Role)

# Class: prov:Quotation (Quotation)

AnnotationAssertion(rdfs:comment prov:Quotation "An instance of prov:Quotation provides additional descriptions about the binary prov:wasQuotedFrom relation from some taken prov:Entity from an earlier, larger prov:Entity. For example, :here_is_looking_at_you_kid prov:wasQuotedFrom :casablanca_script; prov:qualifiedQuotation [ a prov:Quotation; prov:entity :casablanca_script; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:Quotation <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Quotation "Quotation")
AnnotationAssertion(prov:category prov:Quotation "qualified")
AnnotationAssertion(prov:component prov:Quotation "derivations")
AnnotationAssertion(prov:definition prov:Quotation "A quotation is the repeat of (some or all of) an entity, such as text or image, by someone who may or may not be its original author. Quotation is a particular case of derivation."@en)
AnnotationAssertion(prov:dm prov:Quotation "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-quotation"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Quotation "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-quotation"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:Quotation prov:wasQuotedFrom)
SubClassOf(prov:Quotation prov:Derivation)

# Class: prov:Removal (Removal)

AnnotationAssertion(rdfs:isDefinedBy prov:Removal <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:Removal "Removal")
AnnotationAssertion(prov:category prov:Removal "collections")
AnnotationAssertion(prov:component prov:Removal "collections")
AnnotationAssertion(prov:constraints prov:Removal "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#dictionary-constraints"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:Removal "Removal is a derivation that transforms a dictionary into another, by removing one or more key-entity pairs.")
AnnotationAssertion(prov:dm prov:Removal "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#term-dictionary-removal"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Removal "http://www.w3.org/TR/2013/NOTE-prov-dictionary-20130430/#expression-dictionary-removal"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:Removal prov:derivedByRemovalFrom)
SubClassOf(prov:Removal prov:Derivation)
SubClassOf(prov:Removal ObjectExactCardinality(1 prov:dictionary))
SubClassOf(prov:Removal DataMinCardinality(1 prov:removedKey))

# Class: prov:Replace (Replace)

AnnotationAssertion(rdfs:label prov:Replace "Replace"@en)
AnnotationAssertion(prov:definition prov:Replace "Activity that identifies the replacement of a resource."@en)
SubClassOf(prov:Replace prov:Activity)

# Class: prov:Revision (Revision)

AnnotationAssertion(rdfs:comment prov:Revision "An instance of prov:Revision provides additional descriptions about the binary prov:wasRevisionOf relation from some newer prov:Entity to an earlier prov:Entity. For example, :draft_2 prov:wasRevisionOf :draft_1; prov:qualifiedRevision [ a prov:Revision; prov:entity :draft_1; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:Revision <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Revision "Revision")
AnnotationAssertion(prov:category prov:Revision "qualified")
AnnotationAssertion(prov:component prov:Revision "derivations")
AnnotationAssertion(prov:definition prov:Revision "A revision is a derivation for which the resulting entity is a revised version of some original. The implication here is that the resulting entity contains substantial content from the original. Revision is a particular case of derivation."@en)
AnnotationAssertion(prov:dm prov:Revision "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-revision"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Revision "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-Revision"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:Revision prov:wasRevisionOf)
SubClassOf(prov:Revision prov:Derivation)

# Class: prov:RightsAssignment (RightsAssignment)

AnnotationAssertion(rdfs:label prov:RightsAssignment "RightsAssignment"@en)
AnnotationAssertion(prov:definition prov:RightsAssignment "Activity that identifies the rights assignment of a resource."@en)
SubClassOf(prov:RightsAssignment prov:Activity)

# Class: prov:RightsHolder (RightsHolder)

AnnotationAssertion(rdfs:label prov:RightsHolder "RightsHolder"@en)
AnnotationAssertion(prov:definition prov:RightsHolder "Role with the function of owning or managing rights over a resource. The Agent assigned to this role is associated with a RightsAssignment Activity"@en)
SubClassOf(prov:RightsHolder prov:Role)

# Class: prov:Role (Role)

AnnotationAssertion(rdfs:isDefinedBy prov:Role <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Role "Role")
AnnotationAssertion(rdfs:seeAlso prov:Role prov:hadRole)
AnnotationAssertion(prov:category prov:Role "qualified")
AnnotationAssertion(prov:component prov:Role "agents-responsibility")
AnnotationAssertion(prov:definition prov:Role "A role is the function of an entity or agent with respect to an activity, in the context of a usage, generation, invalidation, association, start, and end."@en)
AnnotationAssertion(prov:dm prov:Role "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-attribute-role"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Role "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-attribute"^^xsd:anyURI)

# Class: prov:ServiceDescription (ServiceDescription)

AnnotationAssertion(rdfs:comment prov:ServiceDescription "Type for a generic provenance query service. Mainly for use in RDF provenance query service descriptions, to facilitate discovery in linked data environments.")
AnnotationAssertion(rdfs:isDefinedBy prov:ServiceDescription <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:label prov:ServiceDescription "ServiceDescription")
AnnotationAssertion(prov:aq prov:ServiceDescription "http://www.w3.org/TR/2013/NOTE-prov-aq-20130430/#provenance-query-service-discovery"^^xsd:anyURI)
AnnotationAssertion(prov:category prov:ServiceDescription "access-and-query")
SubClassOf(prov:ServiceDescription prov:SoftwareAgent)

# Class: prov:SoftwareAgent (SoftwareAgent)

AnnotationAssertion(rdfs:isDefinedBy prov:SoftwareAgent <http://www.w3.org/ns/prov#>)
AnnotationAssertion(rdfs:isDefinedBy prov:SoftwareAgent <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:SoftwareAgent "SoftwareAgent")
AnnotationAssertion(prov:category prov:SoftwareAgent "expanded")
AnnotationAssertion(prov:component prov:SoftwareAgent "agents-responsibility")
AnnotationAssertion(prov:definition prov:SoftwareAgent "A software agent is running software."@en)
AnnotationAssertion(prov:dm prov:SoftwareAgent "http://www.w3.org/TR/2012/WD-prov-dm-20120703/prov-dm.html#term-agent"^^xsd:anyURI)
AnnotationAssertion(prov:dm prov:SoftwareAgent "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-agent"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:SoftwareAgent "http://www.w3.org/TR/2012/WD-prov-dm-20120703/prov-n.html#expression-types"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:SoftwareAgent "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-types"^^xsd:anyURI)
SubClassOf(prov:SoftwareAgent owl:Thing)
SubClassOf(prov:SoftwareAgent prov:Agent)

# Class: prov:Start (Start)

AnnotationAssertion(rdfs:comment prov:Start "An instance of prov:Start provides additional descriptions about the binary prov:wasStartedBy relation from some started prov:Activity to an prov:Entity that started it. For example, :foot_race prov:wasStartedBy :bang; prov:qualifiedStart [ a prov:Start; prov:entity :bang; :foo :bar; prov:atTime '2012-03-09T08:05:08-05:00'^^xsd:dateTime ] ."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:Start <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Start "Start")
AnnotationAssertion(prov:category prov:Start "qualified")
AnnotationAssertion(prov:component prov:Start "entities-activities")
AnnotationAssertion(prov:constraints prov:Start "http://www.w3.org/TR/2013/REC-prov-constraints-20130430/#prov-dm-constraints-fig"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:Start "Start is when an activity is deemed to have been started by an entity, known as trigger. The activity did not exist before its start. Any usage, generation, or invalidation involving an activity follows the activity's start. A start may refer to a trigger entity that set off the activity, or to an activity, known as starter, that generated the trigger."@en)
AnnotationAssertion(prov:dm prov:Start "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-Start"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Start "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-Start"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:Start prov:wasStartedBy)
SubClassOf(prov:Start prov:EntityInfluence)
SubClassOf(prov:Start prov:InstantaneousEvent)

# Class: prov:Submit (Submit)

AnnotationAssertion(rdfs:label prov:Submit "Submit"@en)
AnnotationAssertion(prov:definition prov:Submit "Activity that identifies the issuance (e.g., publication) of a resource. "@en)
SubClassOf(prov:Submit prov:Activity)

# Class: prov:Usage (Usage)

AnnotationAssertion(rdfs:comment prov:Usage "An instance of prov:Usage provides additional descriptions about the binary prov:used relation from some prov:Activity to an prov:Entity that it used. For example, :keynote prov:used :podium; prov:qualifiedUsage [ a prov:Usage; prov:entity :podium; :foo :bar ]."@en)
AnnotationAssertion(rdfs:isDefinedBy prov:Usage <http://www.w3.org/ns/prov-o#>)
AnnotationAssertion(rdfs:label prov:Usage "Usage")
AnnotationAssertion(prov:category prov:Usage "qualified")
AnnotationAssertion(prov:component prov:Usage "entities-activities")
AnnotationAssertion(prov:constraints prov:Usage "http://www.w3.org/TR/2013/REC-prov-constraints-20130430/#prov-dm-constraints-fig"^^xsd:anyURI)
AnnotationAssertion(prov:definition prov:Usage "Usage is the beginning of utilizing an entity by an activity. Before usage, the activity had not begun to utilize this entity and could not have been affected by the entity."@en)
AnnotationAssertion(prov:dm prov:Usage "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-Usage"^^xsd:anyURI)
AnnotationAssertion(prov:n prov:Usage "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-Usage"^^xsd:anyURI)
AnnotationAssertion(prov:unqualifiedForm prov:Usage prov:used)
SubClassOf(prov:Usage prov:EntityInfluence)
SubClassOf(prov:Usage prov:InstantaneousEvent)


SubObjectPropertyOf(ObjectPropertyChain(prov:qualifiedAssociation prov:agent) prov:wasAssociatedWith)
SubObjectPropertyOf(ObjectPropertyChain(prov:qualifiedAttribution prov:agent) prov:wasAttributedTo)
SubObjectPropertyOf(ObjectPropertyChain(prov:qualifiedCommunication prov:activity) prov:wasInformedBy)
SubObjectPropertyOf(ObjectPropertyChain(prov:qualifiedDelegation prov:agent) prov:actedOnBehalfOf)
SubObjectPropertyOf(ObjectPropertyChain(prov:qualifiedDerivation prov:entity) prov:wasDerivedFrom)
SubObjectPropertyOf(ObjectPropertyChain(prov:qualifiedEnd prov:entity) prov:wasEndedBy)
SubObjectPropertyOf(ObjectPropertyChain(prov:qualifiedGeneration prov:activity) prov:wasGeneratedBy)
SubObjectPropertyOf(ObjectPropertyChain(prov:qualifiedInvalidation prov:activity) prov:wasInvalidatedBy)
SubObjectPropertyOf(ObjectPropertyChain(prov:qualifiedPrimarySource prov:entity) prov:hadPrimarySource)
SubObjectPropertyOf(ObjectPropertyChain(prov:qualifiedQuotation prov:entity) prov:wasQuotedFrom)
SubObjectPropertyOf(ObjectPropertyChain(prov:qualifiedRevision prov:entity) prov:wasRevisionOf)
SubObjectPropertyOf(ObjectPropertyChain(prov:qualifiedStart prov:entity) prov:wasStartedBy)
SubObjectPropertyOf(ObjectPropertyChain(prov:qualifiedUsage prov:entity) prov:used)
)