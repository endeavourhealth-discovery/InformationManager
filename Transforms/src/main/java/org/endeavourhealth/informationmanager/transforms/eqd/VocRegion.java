//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.12.23 at 09:36:56 AM GMT 
//


package org.endeavourhealth.informationmanager.transforms.eqd;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for voc.Region.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="voc.Region"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="ENGLAND"/&gt;
 *     &lt;enumeration value="SCOTLAND"/&gt;
 *     &lt;enumeration value="NORTHERN IRELAND"/&gt;
 *     &lt;enumeration value="GUERNSEY"/&gt;
 *     &lt;enumeration value="REPUBLIC OF IRELAND"/&gt;
 *     &lt;enumeration value="JERSEY"/&gt;
 *     &lt;enumeration value="ISLE OF MAN"/&gt;
 *     &lt;enumeration value="EMIRATES"/&gt;
 *     &lt;enumeration value="WALES"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "voc.Region")
@XmlEnum
public enum VocRegion {

    ENGLAND("ENGLAND"),
    SCOTLAND("SCOTLAND"),
    @XmlEnumValue("NORTHERN IRELAND")
    NORTHERN_IRELAND("NORTHERN IRELAND"),
    GUERNSEY("GUERNSEY"),
    @XmlEnumValue("REPUBLIC OF IRELAND")
    REPUBLIC_OF_IRELAND("REPUBLIC OF IRELAND"),
    JERSEY("JERSEY"),
    @XmlEnumValue("ISLE OF MAN")
    ISLE_OF_MAN("ISLE OF MAN"),
    EMIRATES("EMIRATES"),
    WALES("WALES");
    private final String value;

    VocRegion(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static VocRegion fromValue(String v) {
        for (VocRegion c: VocRegion.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
