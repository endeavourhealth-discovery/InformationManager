// Generated from C:/Users/david/CloudStation/EhealthTrust/Discovery Data Service/InformationManager/Grammar/src/main/resources\IMLang.g4 by ANTLR 4.9
package org.endeavourhealth.informationmanager.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class IMLangLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, IRI_LABEL=23, TYPE=24, 
		SHAPE=25, RECORDOF=26, TARGETCLASS=27, CLASS=28, PROPERTY=29, DATATYPE=30, 
		VALUESET=31, PATH=32, MINCOUNT=33, MAXCOUNT=34, NAME=35, DESCRIPTION=36, 
		CODE=37, SCHEME=38, MININCLUSIVE=39, MAXINCLUSIVE=40, MINEXCLUSIVE=41, 
		MAXEXCLUSIVE=42, SUBCLASS=43, EQUIVALENTTO=44, DISJOINT=45, SUBPROPERTY=46, 
		INVERSE=47, INTEGER=48, DOUBLE=49, DIGIT=50, EXACT=51, AND=52, OR=53, 
		IRI=54, ABBREVIATED_IRI=55, FULL_IRI=56, WORD=57, LOWERCASE=58, UPPERCASE=59, 
		QUOTED_STRING=60, WS=61, SC=62;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "A", "B", "C", "D", "E", 
			"F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", 
			"T", "U", "V", "W", "X", "Y", "Z", "IRI_LABEL", "TYPE", "SHAPE", "RECORDOF", 
			"TARGETCLASS", "CLASS", "PROPERTY", "DATATYPE", "VALUESET", "PATH", "MINCOUNT", 
			"MAXCOUNT", "NAME", "DESCRIPTION", "CODE", "SCHEME", "MININCLUSIVE", 
			"MAXINCLUSIVE", "MINEXCLUSIVE", "MAXEXCLUSIVE", "SUBCLASS", "EQUIVALENTTO", 
			"DISJOINT", "SUBPROPERTY", "INVERSE", "INTEGER", "DOUBLE", "DIGIT", "EXACT", 
			"AND", "OR", "IRI", "ABBREVIATED_IRI", "FULL_IRI", "WORD", "LOWERCASE", 
			"UPPERCASE", "QUOTED_STRING", "WS", "SC"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'.'", "'['", "'path '", "']'", "'class '", "'valuetype'", "'status '", 
			"'active'", "'inactive'", "'draft'", "'version '", "'subpropertyof '", 
			"'subPropertyOf '", "'<<<'", "'inverseof '", "'inverseOf '", "'('", "','", 
			"')'", "'{'", "'}'", "'^^'", null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, "'or'", 
			null, null, null, null, null, null, null, null, "';'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, "IRI_LABEL", 
			"TYPE", "SHAPE", "RECORDOF", "TARGETCLASS", "CLASS", "PROPERTY", "DATATYPE", 
			"VALUESET", "PATH", "MINCOUNT", "MAXCOUNT", "NAME", "DESCRIPTION", "CODE", 
			"SCHEME", "MININCLUSIVE", "MAXINCLUSIVE", "MINEXCLUSIVE", "MAXEXCLUSIVE", 
			"SUBCLASS", "EQUIVALENTTO", "DISJOINT", "SUBPROPERTY", "INVERSE", "INTEGER", 
			"DOUBLE", "DIGIT", "EXACT", "AND", "OR", "IRI", "ABBREVIATED_IRI", "FULL_IRI", 
			"WORD", "LOWERCASE", "UPPERCASE", "QUOTED_STRING", "WS", "SC"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public IMLangLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "IMLang.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2@\u02ee\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4"+
		"\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3"+
		"\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n"+
		"\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f"+
		"\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3"+
		"\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3"+
		"\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3"+
		"\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3"+
		"\21\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3"+
		"\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3"+
		"\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'"+
		"\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3"+
		"\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3"+
		"\63\3\63\3\63\3\63\5\63\u0183\n\63\3\64\3\64\3\64\3\64\3\64\3\64\3\65"+
		"\3\65\3\65\5\65\u018e\n\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65"+
		"\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\67\3\67"+
		"\3\67\3\67\3\67\3\67\38\38\38\38\38\38\38\38\38\39\39\39\39\39\39\39\3"+
		"9\39\3:\3:\3:\3:\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3<\3<\3<\3<\3<\3<\3<\3"+
		"<\3<\3<\3<\3<\3<\5<\u01d8\n<\3=\3=\3=\3=\3=\3=\3=\3=\3=\3=\3=\3=\3=\5"+
		"=\u01e7\n=\3>\3>\3>\3>\3>\3>\3?\3?\3?\3?\3?\3?\3?\3?\3?\3?\3?\3?\3?\3"+
		"@\3@\3@\3@\3@\3A\3A\3A\3A\3A\3A\3A\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3"+
		"B\3B\3B\3B\5B\u0217\nB\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\5"+
		"C\u0228\nC\3D\3D\3D\3D\3D\3D\3D\3D\3D\3D\3D\3D\3D\3D\5D\u0238\nD\3E\3"+
		"E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\5E\u0248\nE\3F\3F\3F\3F\3F\3F\3"+
		"F\3F\3F\3F\3F\3F\3F\3F\5F\u0258\nF\3G\3G\3G\3G\3G\3G\3G\3G\3G\3G\3G\3"+
		"G\3G\3G\3G\3G\5G\u026a\nG\3H\3H\3H\3H\3H\3H\3H\3H\3H\3H\3H\3H\3H\3I\3"+
		"I\3I\3I\3I\3I\3I\3I\3I\3I\3I\3I\3I\3I\3J\3J\3J\3J\3J\3J\3J\3J\3J\3J\3"+
		"K\6K\u0292\nK\rK\16K\u0293\3L\6L\u0297\nL\rL\16L\u0298\3L\3L\6L\u029d"+
		"\nL\rL\16L\u029e\5L\u02a1\nL\3M\3M\3N\3N\3N\3N\3N\3N\3N\3N\3N\3N\6N\u02af"+
		"\nN\rN\16N\u02b0\3O\3O\3O\3O\5O\u02b7\nO\3P\3P\3P\3Q\3Q\3Q\5Q\u02bf\n"+
		"Q\3R\3R\3R\6R\u02c4\nR\rR\16R\u02c5\3R\3R\3R\5R\u02cb\nR\3S\3S\3S\3S\3"+
		"T\3T\3T\3T\6T\u02d5\nT\rT\16T\u02d6\3U\3U\3V\3V\3W\3W\7W\u02df\nW\fW\16"+
		"W\u02e2\13W\3W\3W\3X\6X\u02e7\nX\rX\16X\u02e8\3X\3X\3Y\3Y\2\2Z\3\3\5\4"+
		"\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22"+
		"#\23%\24\'\25)\26+\27-\30/\2\61\2\63\2\65\2\67\29\2;\2=\2?\2A\2C\2E\2"+
		"G\2I\2K\2M\2O\2Q\2S\2U\2W\2Y\2[\2]\2_\2a\2c\31e\32g\33i\34k\35m\36o\37"+
		"q s!u\"w#y${%}&\177\'\u0081(\u0083)\u0085*\u0087+\u0089,\u008b-\u008d"+
		".\u008f/\u0091\60\u0093\61\u0095\62\u0097\63\u0099\64\u009b\65\u009d\66"+
		"\u009f\67\u00a18\u00a39\u00a5:\u00a7;\u00a9<\u00ab=\u00ad>\u00af?\u00b1"+
		"@\3\2#\4\2CCcc\4\2DDdd\4\2EEee\4\2FFff\4\2GGgg\4\2HHhh\4\2IIii\4\2JJj"+
		"j\4\2KKkk\4\2LLll\4\2MMmm\4\2NNnn\4\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2"+
		"SSss\4\2TTtt\4\2UUuu\4\2VVvv\4\2WWww\4\2XXxx\4\2YYyy\4\2ZZzz\4\2[[{{\4"+
		"\2\\\\||\3\2\62;\4\2((..\6\2%%/\61<<aa\3\2c|\3\2C\\\4\2$$))\5\2\13\f\17"+
		"\17\"\"\2\u02ef\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3"+
		"\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2"+
		"\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3"+
		"\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2"+
		"\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2"+
		"\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{"+
		"\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085"+
		"\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2"+
		"\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097"+
		"\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2"+
		"\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\2\u00a5\3\2\2\2\2\u00a7\3\2\2\2\2\u00a9"+
		"\3\2\2\2\2\u00ab\3\2\2\2\2\u00ad\3\2\2\2\2\u00af\3\2\2\2\2\u00b1\3\2\2"+
		"\2\3\u00b3\3\2\2\2\5\u00b5\3\2\2\2\7\u00b7\3\2\2\2\t\u00bd\3\2\2\2\13"+
		"\u00bf\3\2\2\2\r\u00c6\3\2\2\2\17\u00d0\3\2\2\2\21\u00d8\3\2\2\2\23\u00df"+
		"\3\2\2\2\25\u00e8\3\2\2\2\27\u00ee\3\2\2\2\31\u00f7\3\2\2\2\33\u0106\3"+
		"\2\2\2\35\u0115\3\2\2\2\37\u0119\3\2\2\2!\u0124\3\2\2\2#\u012f\3\2\2\2"+
		"%\u0131\3\2\2\2\'\u0133\3\2\2\2)\u0135\3\2\2\2+\u0137\3\2\2\2-\u0139\3"+
		"\2\2\2/\u013c\3\2\2\2\61\u013e\3\2\2\2\63\u0140\3\2\2\2\65\u0142\3\2\2"+
		"\2\67\u0144\3\2\2\29\u0146\3\2\2\2;\u0148\3\2\2\2=\u014a\3\2\2\2?\u014c"+
		"\3\2\2\2A\u014e\3\2\2\2C\u0150\3\2\2\2E\u0152\3\2\2\2G\u0154\3\2\2\2I"+
		"\u0156\3\2\2\2K\u0158\3\2\2\2M\u015a\3\2\2\2O\u015c\3\2\2\2Q\u015e\3\2"+
		"\2\2S\u0160\3\2\2\2U\u0162\3\2\2\2W\u0164\3\2\2\2Y\u0166\3\2\2\2[\u0168"+
		"\3\2\2\2]\u016a\3\2\2\2_\u016c\3\2\2\2a\u016e\3\2\2\2c\u0170\3\2\2\2e"+
		"\u0182\3\2\2\2g\u0184\3\2\2\2i\u018d\3\2\2\2k\u0198\3\2\2\2m\u01a4\3\2"+
		"\2\2o\u01aa\3\2\2\2q\u01b3\3\2\2\2s\u01bc\3\2\2\2u\u01c5\3\2\2\2w\u01d7"+
		"\3\2\2\2y\u01e6\3\2\2\2{\u01e8\3\2\2\2}\u01ee\3\2\2\2\177\u01fb\3\2\2"+
		"\2\u0081\u0200\3\2\2\2\u0083\u0216\3\2\2\2\u0085\u0227\3\2\2\2\u0087\u0237"+
		"\3\2\2\2\u0089\u0247\3\2\2\2\u008b\u0257\3\2\2\2\u008d\u0269\3\2\2\2\u008f"+
		"\u026b\3\2\2\2\u0091\u0278\3\2\2\2\u0093\u0286\3\2\2\2\u0095\u0291\3\2"+
		"\2\2\u0097\u0296\3\2\2\2\u0099\u02a2\3\2\2\2\u009b\u02a4\3\2\2\2\u009d"+
		"\u02b6\3\2\2\2\u009f\u02b8\3\2\2\2\u00a1\u02be\3\2\2\2\u00a3\u02ca\3\2"+
		"\2\2\u00a5\u02cc\3\2\2\2\u00a7\u02d4\3\2\2\2\u00a9\u02d8\3\2\2\2\u00ab"+
		"\u02da\3\2\2\2\u00ad\u02dc\3\2\2\2\u00af\u02e6\3\2\2\2\u00b1\u02ec\3\2"+
		"\2\2\u00b3\u00b4\7\60\2\2\u00b4\4\3\2\2\2\u00b5\u00b6\7]\2\2\u00b6\6\3"+
		"\2\2\2\u00b7\u00b8\7r\2\2\u00b8\u00b9\7c\2\2\u00b9\u00ba\7v\2\2\u00ba"+
		"\u00bb\7j\2\2\u00bb\u00bc\7\"\2\2\u00bc\b\3\2\2\2\u00bd\u00be\7_\2\2\u00be"+
		"\n\3\2\2\2\u00bf\u00c0\7e\2\2\u00c0\u00c1\7n\2\2\u00c1\u00c2\7c\2\2\u00c2"+
		"\u00c3\7u\2\2\u00c3\u00c4\7u\2\2\u00c4\u00c5\7\"\2\2\u00c5\f\3\2\2\2\u00c6"+
		"\u00c7\7x\2\2\u00c7\u00c8\7c\2\2\u00c8\u00c9\7n\2\2\u00c9\u00ca\7w\2\2"+
		"\u00ca\u00cb\7g\2\2\u00cb\u00cc\7v\2\2\u00cc\u00cd\7{\2\2\u00cd\u00ce"+
		"\7r\2\2\u00ce\u00cf\7g\2\2\u00cf\16\3\2\2\2\u00d0\u00d1\7u\2\2\u00d1\u00d2"+
		"\7v\2\2\u00d2\u00d3\7c\2\2\u00d3\u00d4\7v\2\2\u00d4\u00d5\7w\2\2\u00d5"+
		"\u00d6\7u\2\2\u00d6\u00d7\7\"\2\2\u00d7\20\3\2\2\2\u00d8\u00d9\7c\2\2"+
		"\u00d9\u00da\7e\2\2\u00da\u00db\7v\2\2\u00db\u00dc\7k\2\2\u00dc\u00dd"+
		"\7x\2\2\u00dd\u00de\7g\2\2\u00de\22\3\2\2\2\u00df\u00e0\7k\2\2\u00e0\u00e1"+
		"\7p\2\2\u00e1\u00e2\7c\2\2\u00e2\u00e3\7e\2\2\u00e3\u00e4\7v\2\2\u00e4"+
		"\u00e5\7k\2\2\u00e5\u00e6\7x\2\2\u00e6\u00e7\7g\2\2\u00e7\24\3\2\2\2\u00e8"+
		"\u00e9\7f\2\2\u00e9\u00ea\7t\2\2\u00ea\u00eb\7c\2\2\u00eb\u00ec\7h\2\2"+
		"\u00ec\u00ed\7v\2\2\u00ed\26\3\2\2\2\u00ee\u00ef\7x\2\2\u00ef\u00f0\7"+
		"g\2\2\u00f0\u00f1\7t\2\2\u00f1\u00f2\7u\2\2\u00f2\u00f3\7k\2\2\u00f3\u00f4"+
		"\7q\2\2\u00f4\u00f5\7p\2\2\u00f5\u00f6\7\"\2\2\u00f6\30\3\2\2\2\u00f7"+
		"\u00f8\7u\2\2\u00f8\u00f9\7w\2\2\u00f9\u00fa\7d\2\2\u00fa\u00fb\7r\2\2"+
		"\u00fb\u00fc\7t\2\2\u00fc\u00fd\7q\2\2\u00fd\u00fe\7r\2\2\u00fe\u00ff"+
		"\7g\2\2\u00ff\u0100\7t\2\2\u0100\u0101\7v\2\2\u0101\u0102\7{\2\2\u0102"+
		"\u0103\7q\2\2\u0103\u0104\7h\2\2\u0104\u0105\7\"\2\2\u0105\32\3\2\2\2"+
		"\u0106\u0107\7u\2\2\u0107\u0108\7w\2\2\u0108\u0109\7d\2\2\u0109\u010a"+
		"\7R\2\2\u010a\u010b\7t\2\2\u010b\u010c\7q\2\2\u010c\u010d\7r\2\2\u010d"+
		"\u010e\7g\2\2\u010e\u010f\7t\2\2\u010f\u0110\7v\2\2\u0110\u0111\7{\2\2"+
		"\u0111\u0112\7Q\2\2\u0112\u0113\7h\2\2\u0113\u0114\7\"\2\2\u0114\34\3"+
		"\2\2\2\u0115\u0116\7>\2\2\u0116\u0117\7>\2\2\u0117\u0118\7>\2\2\u0118"+
		"\36\3\2\2\2\u0119\u011a\7k\2\2\u011a\u011b\7p\2\2\u011b\u011c\7x\2\2\u011c"+
		"\u011d\7g\2\2\u011d\u011e\7t\2\2\u011e\u011f\7u\2\2\u011f\u0120\7g\2\2"+
		"\u0120\u0121\7q\2\2\u0121\u0122\7h\2\2\u0122\u0123\7\"\2\2\u0123 \3\2"+
		"\2\2\u0124\u0125\7k\2\2\u0125\u0126\7p\2\2\u0126\u0127\7x\2\2\u0127\u0128"+
		"\7g\2\2\u0128\u0129\7t\2\2\u0129\u012a\7u\2\2\u012a\u012b\7g\2\2\u012b"+
		"\u012c\7Q\2\2\u012c\u012d\7h\2\2\u012d\u012e\7\"\2\2\u012e\"\3\2\2\2\u012f"+
		"\u0130\7*\2\2\u0130$\3\2\2\2\u0131\u0132\7.\2\2\u0132&\3\2\2\2\u0133\u0134"+
		"\7+\2\2\u0134(\3\2\2\2\u0135\u0136\7}\2\2\u0136*\3\2\2\2\u0137\u0138\7"+
		"\177\2\2\u0138,\3\2\2\2\u0139\u013a\7`\2\2\u013a\u013b\7`\2\2\u013b.\3"+
		"\2\2\2\u013c\u013d\t\2\2\2\u013d\60\3\2\2\2\u013e\u013f\t\3\2\2\u013f"+
		"\62\3\2\2\2\u0140\u0141\t\4\2\2\u0141\64\3\2\2\2\u0142\u0143\t\5\2\2\u0143"+
		"\66\3\2\2\2\u0144\u0145\t\6\2\2\u01458\3\2\2\2\u0146\u0147\t\7\2\2\u0147"+
		":\3\2\2\2\u0148\u0149\t\b\2\2\u0149<\3\2\2\2\u014a\u014b\t\t\2\2\u014b"+
		">\3\2\2\2\u014c\u014d\t\n\2\2\u014d@\3\2\2\2\u014e\u014f\t\13\2\2\u014f"+
		"B\3\2\2\2\u0150\u0151\t\f\2\2\u0151D\3\2\2\2\u0152\u0153\t\r\2\2\u0153"+
		"F\3\2\2\2\u0154\u0155\t\16\2\2\u0155H\3\2\2\2\u0156\u0157\t\17\2\2\u0157"+
		"J\3\2\2\2\u0158\u0159\t\20\2\2\u0159L\3\2\2\2\u015a\u015b\t\21\2\2\u015b"+
		"N\3\2\2\2\u015c\u015d\t\22\2\2\u015dP\3\2\2\2\u015e\u015f\t\23\2\2\u015f"+
		"R\3\2\2\2\u0160\u0161\t\24\2\2\u0161T\3\2\2\2\u0162\u0163\t\25\2\2\u0163"+
		"V\3\2\2\2\u0164\u0165\t\26\2\2\u0165X\3\2\2\2\u0166\u0167\t\27\2\2\u0167"+
		"Z\3\2\2\2\u0168\u0169\t\30\2\2\u0169\\\3\2\2\2\u016a\u016b\t\31\2\2\u016b"+
		"^\3\2\2\2\u016c\u016d\t\32\2\2\u016d`\3\2\2\2\u016e\u016f\t\33\2\2\u016f"+
		"b\3\2\2\2\u0170\u0171\5? \2\u0171\u0172\5Q)\2\u0172\u0173\5? \2\u0173"+
		"d\3\2\2\2\u0174\u0175\7c\2\2\u0175\u0183\7\"\2\2\u0176\u0177\7C\2\2\u0177"+
		"\u0183\7\"\2\2\u0178\u0179\7V\2\2\u0179\u017a\7{\2\2\u017a\u017b\7r\2"+
		"\2\u017b\u017c\7g\2\2\u017c\u0183\7\"\2\2\u017d\u017e\7v\2\2\u017e\u017f"+
		"\7{\2\2\u017f\u0180\7r\2\2\u0180\u0181\7g\2\2\u0181\u0183\7\"\2\2\u0182"+
		"\u0174\3\2\2\2\u0182\u0176\3\2\2\2\u0182\u0178\3\2\2\2\u0182\u017d\3\2"+
		"\2\2\u0183f\3\2\2\2\u0184\u0185\5S*\2\u0185\u0186\5=\37\2\u0186\u0187"+
		"\5/\30\2\u0187\u0188\5M\'\2\u0188\u0189\5\67\34\2\u0189h\3\2\2\2\u018a"+
		"\u018b\5? \2\u018b\u018c\5S*\2\u018c\u018e\3\2\2\2\u018d\u018a\3\2\2\2"+
		"\u018d\u018e\3\2\2\2\u018e\u018f\3\2\2\2\u018f\u0190\5Q)\2\u0190\u0191"+
		"\5\67\34\2\u0191\u0192\5\63\32\2\u0192\u0193\5K&\2\u0193\u0194\5Q)\2\u0194"+
		"\u0195\5\65\33\2\u0195\u0196\5K&\2\u0196\u0197\59\35\2\u0197j\3\2\2\2"+
		"\u0198\u0199\5U+\2\u0199\u019a\5/\30\2\u019a\u019b\5Q)\2\u019b\u019c\5"+
		";\36\2\u019c\u019d\5\67\34\2\u019d\u019e\5U+\2\u019e\u019f\5\63\32\2\u019f"+
		"\u01a0\5E#\2\u01a0\u01a1\5/\30\2\u01a1\u01a2\5S*\2\u01a2\u01a3\5S*\2\u01a3"+
		"l\3\2\2\2\u01a4\u01a5\5\63\32\2\u01a5\u01a6\5E#\2\u01a6\u01a7\5/\30\2"+
		"\u01a7\u01a8\5S*\2\u01a8\u01a9\5S*\2\u01a9n\3\2\2\2\u01aa\u01ab\5M\'\2"+
		"\u01ab\u01ac\5Q)\2\u01ac\u01ad\5K&\2\u01ad\u01ae\5M\'\2\u01ae\u01af\5"+
		"\67\34\2\u01af\u01b0\5Q)\2\u01b0\u01b1\5U+\2\u01b1\u01b2\5_\60\2\u01b2"+
		"p\3\2\2\2\u01b3\u01b4\5\65\33\2\u01b4\u01b5\5/\30\2\u01b5\u01b6\5U+\2"+
		"\u01b6\u01b7\5/\30\2\u01b7\u01b8\5U+\2\u01b8\u01b9\5_\60\2\u01b9\u01ba"+
		"\5M\'\2\u01ba\u01bb\5\67\34\2\u01bbr\3\2\2\2\u01bc\u01bd\5Y-\2\u01bd\u01be"+
		"\5/\30\2\u01be\u01bf\5E#\2\u01bf\u01c0\5W,\2\u01c0\u01c1\5\67\34\2\u01c1"+
		"\u01c2\5S*\2\u01c2\u01c3\5\67\34\2\u01c3\u01c4\5U+\2\u01c4t\3\2\2\2\u01c5"+
		"\u01c6\5M\'\2\u01c6\u01c7\5/\30\2\u01c7\u01c8\5U+\2\u01c8\u01c9\5=\37"+
		"\2\u01c9v\3\2\2\2\u01ca\u01cb\5G$\2\u01cb\u01cc\5? \2\u01cc\u01cd\5I%"+
		"\2\u01cd\u01ce\5\63\32\2\u01ce\u01cf\5K&\2\u01cf\u01d0\5W,\2\u01d0\u01d1"+
		"\5I%\2\u01d1\u01d2\5U+\2\u01d2\u01d8\3\2\2\2\u01d3\u01d4\5G$\2\u01d4\u01d5"+
		"\5? \2\u01d5\u01d6\5I%\2\u01d6\u01d8\3\2\2\2\u01d7\u01ca\3\2\2\2\u01d7"+
		"\u01d3\3\2\2\2\u01d8x\3\2\2\2\u01d9\u01da\5G$\2\u01da\u01db\5/\30\2\u01db"+
		"\u01dc\5]/\2\u01dc\u01dd\5\63\32\2\u01dd\u01de\5K&\2\u01de\u01df\5W,\2"+
		"\u01df\u01e0\5I%\2\u01e0\u01e1\5U+\2\u01e1\u01e7\3\2\2\2\u01e2\u01e3\5"+
		"G$\2\u01e3\u01e4\5/\30\2\u01e4\u01e5\5]/\2\u01e5\u01e7\3\2\2\2\u01e6\u01d9"+
		"\3\2\2\2\u01e6\u01e2\3\2\2\2\u01e7z\3\2\2\2\u01e8\u01e9\5I%\2\u01e9\u01ea"+
		"\5/\30\2\u01ea\u01eb\5G$\2\u01eb\u01ec\5\67\34\2\u01ec\u01ed\7\"\2\2\u01ed"+
		"|\3\2\2\2\u01ee\u01ef\5\65\33\2\u01ef\u01f0\5\67\34\2\u01f0\u01f1\5S*"+
		"\2\u01f1\u01f2\5\63\32\2\u01f2\u01f3\5Q)\2\u01f3\u01f4\5? \2\u01f4\u01f5"+
		"\5M\'\2\u01f5\u01f6\5U+\2\u01f6\u01f7\5? \2\u01f7\u01f8\5K&\2\u01f8\u01f9"+
		"\5I%\2\u01f9\u01fa\7\"\2\2\u01fa~\3\2\2\2\u01fb\u01fc\5\63\32\2\u01fc"+
		"\u01fd\5K&\2\u01fd\u01fe\5\65\33\2\u01fe\u01ff\5\67\34\2\u01ff\u0080\3"+
		"\2\2\2\u0200\u0201\5S*\2\u0201\u0202\5\63\32\2\u0202\u0203\5=\37\2\u0203"+
		"\u0204\5\67\34\2\u0204\u0205\5G$\2\u0205\u0206\5\67\34\2\u0206\u0082\3"+
		"\2\2\2\u0207\u0208\5G$\2\u0208\u0209\5? \2\u0209\u020a\5I%\2\u020a\u020b"+
		"\5? \2\u020b\u020c\5I%\2\u020c\u020d\5\63\32\2\u020d\u020e\5E#\2\u020e"+
		"\u020f\5W,\2\u020f\u0210\5S*\2\u0210\u0211\5? \2\u0211\u0212\5Y-\2\u0212"+
		"\u0213\5\67\34\2\u0213\u0217\3\2\2\2\u0214\u0215\7@\2\2\u0215\u0217\7"+
		"?\2\2\u0216\u0207\3\2\2\2\u0216\u0214\3\2\2\2\u0217\u0084\3\2\2\2\u0218"+
		"\u0219\5G$\2\u0219\u021a\5/\30\2\u021a\u021b\5]/\2\u021b\u021c\5? \2\u021c"+
		"\u021d\5I%\2\u021d\u021e\5\63\32\2\u021e\u021f\5E#\2\u021f\u0220\5W,\2"+
		"\u0220\u0221\5S*\2\u0221\u0222\5? \2\u0222\u0223\5Y-\2\u0223\u0224\5\67"+
		"\34\2\u0224\u0228\3\2\2\2\u0225\u0226\7>\2\2\u0226\u0228\7?\2\2\u0227"+
		"\u0218\3\2\2\2\u0227\u0225\3\2\2\2\u0228\u0086\3\2\2\2\u0229\u022a\5G"+
		"$\2\u022a\u022b\5? \2\u022b\u022c\5I%\2\u022c\u022d\5\67\34\2\u022d\u022e"+
		"\5]/\2\u022e\u022f\5\63\32\2\u022f\u0230\5E#\2\u0230\u0231\5W,\2\u0231"+
		"\u0232\5S*\2\u0232\u0233\5? \2\u0233\u0234\5Y-\2\u0234\u0235\5\67\34\2"+
		"\u0235\u0238\3\2\2\2\u0236\u0238\7@\2\2\u0237\u0229\3\2\2\2\u0237\u0236"+
		"\3\2\2\2\u0238\u0088\3\2\2\2\u0239\u023a\5G$\2\u023a\u023b\5/\30\2\u023b"+
		"\u023c\5]/\2\u023c\u023d\5\67\34\2\u023d\u023e\5]/\2\u023e\u023f\5\63"+
		"\32\2\u023f\u0240\5E#\2\u0240\u0241\5W,\2\u0241\u0242\5S*\2\u0242\u0243"+
		"\5? \2\u0243\u0244\5Y-\2\u0244\u0245\5\67\34\2\u0245\u0248\3\2\2\2\u0246"+
		"\u0248\7>\2\2\u0247\u0239\3\2\2\2\u0247\u0246\3\2\2\2\u0248\u008a\3\2"+
		"\2\2\u0249\u024a\5S*\2\u024a\u024b\5W,\2\u024b\u024c\5\61\31\2\u024c\u024d"+
		"\5\63\32\2\u024d\u024e\5E#\2\u024e\u024f\5/\30\2\u024f\u0250\5S*\2\u0250"+
		"\u0251\5S*\2\u0251\u0252\5K&\2\u0252\u0253\59\35\2\u0253\u0258\3\2\2\2"+
		"\u0254\u0255\7>\2\2\u0255\u0256\7>\2\2\u0256\u0258\7>\2\2\u0257\u0249"+
		"\3\2\2\2\u0257\u0254\3\2\2\2\u0258\u008c\3\2\2\2\u0259\u025a\5\67\34\2"+
		"\u025a\u025b\5O(\2\u025b\u025c\5W,\2\u025c\u025d\5? \2\u025d\u025e\5Y"+
		"-\2\u025e\u025f\5/\30\2\u025f\u0260\5E#\2\u0260\u0261\5\67\34\2\u0261"+
		"\u0262\5I%\2\u0262\u0263\5U+\2\u0263\u0264\5U+\2\u0264\u0265\5K&\2\u0265"+
		"\u026a\3\2\2\2\u0266\u0267\7?\2\2\u0267\u0268\7?\2\2\u0268\u026a\7?\2"+
		"\2\u0269\u0259\3\2\2\2\u0269\u0266\3\2\2\2\u026a\u008e\3\2\2\2\u026b\u026c"+
		"\5\65\33\2\u026c\u026d\5? \2\u026d\u026e\5S*\2\u026e\u026f\5A!\2\u026f"+
		"\u0270\5K&\2\u0270\u0271\5? \2\u0271\u0272\5I%\2\u0272\u0273\5U+\2\u0273"+
		"\u0274\5[.\2\u0274\u0275\5? \2\u0275\u0276\5U+\2\u0276\u0277\5=\37\2\u0277"+
		"\u0090\3\2\2\2\u0278\u0279\5S*\2\u0279\u027a\5W,\2\u027a\u027b\5\61\31"+
		"\2\u027b\u027c\5M\'\2\u027c\u027d\5Q)\2\u027d\u027e\5K&\2\u027e\u027f"+
		"\5M\'\2\u027f\u0280\5\67\34\2\u0280\u0281\5Q)\2\u0281\u0282\5U+\2\u0282"+
		"\u0283\5_\60\2\u0283\u0284\5K&\2\u0284\u0285\59\35\2\u0285\u0092\3\2\2"+
		"\2\u0286\u0287\5? \2\u0287\u0288\5I%\2\u0288\u0289\5Y-\2\u0289\u028a\5"+
		"\67\34\2\u028a\u028b\5Q)\2\u028b\u028c\5S*\2\u028c\u028d\5\67\34\2\u028d"+
		"\u028e\5K&\2\u028e\u028f\59\35\2\u028f\u0094\3\2\2\2\u0290\u0292\5\u0099"+
		"M\2\u0291\u0290\3\2\2\2\u0292\u0293\3\2\2\2\u0293\u0291\3\2\2\2\u0293"+
		"\u0294\3\2\2\2\u0294\u0096\3\2\2\2\u0295\u0297\5\u0099M\2\u0296\u0295"+
		"\3\2\2\2\u0297\u0298\3\2\2\2\u0298\u0296\3\2\2\2\u0298\u0299\3\2\2\2\u0299"+
		"\u02a0\3\2\2\2\u029a\u029c\7\60\2\2\u029b\u029d\5\u0099M\2\u029c\u029b"+
		"\3\2\2\2\u029d\u029e\3\2\2\2\u029e\u029c\3\2\2\2\u029e\u029f\3\2\2\2\u029f"+
		"\u02a1\3\2\2\2\u02a0\u029a\3\2\2\2\u02a0\u02a1\3\2\2\2\u02a1\u0098\3\2"+
		"\2\2\u02a2\u02a3\t\34\2\2\u02a3\u009a\3\2\2\2\u02a4\u02a5\7g\2\2\u02a5"+
		"\u02a6\7z\2\2\u02a6\u02a7\7c\2\2\u02a7\u02a8\7e\2\2\u02a8\u02a9\7v\2\2"+
		"\u02a9\u02aa\7n\2\2\u02aa\u02ab\7{\2\2\u02ab\u02ac\7\"\2\2\u02ac\u02ae"+
		"\3\2\2\2\u02ad\u02af\5\u0099M\2\u02ae\u02ad\3\2\2\2\u02af\u02b0\3\2\2"+
		"\2\u02b0\u02ae\3\2\2\2\u02b0\u02b1\3\2\2\2\u02b1\u009c\3\2\2\2\u02b2\u02b3"+
		"\7c\2\2\u02b3\u02b4\7p\2\2\u02b4\u02b7\7f\2\2\u02b5\u02b7\t\35\2\2\u02b6"+
		"\u02b2\3\2\2\2\u02b6\u02b5\3\2\2\2\u02b7\u009e\3\2\2\2\u02b8\u02b9\7q"+
		"\2\2\u02b9\u02ba\7t\2\2\u02ba\u00a0\3\2\2\2\u02bb\u02bf\5\u00a3R\2\u02bc"+
		"\u02bf\5\u00a5S\2\u02bd\u02bf\5\u00a7T\2\u02be\u02bb\3\2\2\2\u02be\u02bc"+
		"\3\2\2\2\u02be\u02bd\3\2\2\2\u02bf\u00a2\3\2\2\2\u02c0\u02c1\7<\2\2\u02c1"+
		"\u02cb\5\u00a7T\2\u02c2\u02c4\5\u00a9U\2\u02c3\u02c2\3\2\2\2\u02c4\u02c5"+
		"\3\2\2\2\u02c5\u02c3\3\2\2\2\u02c5\u02c6\3\2\2\2\u02c6\u02c7\3\2\2\2\u02c7"+
		"\u02c8\7<\2\2\u02c8\u02c9\5\u00a7T\2\u02c9\u02cb\3\2\2\2\u02ca\u02c0\3"+
		"\2\2\2\u02ca\u02c3\3\2\2\2\u02cb\u00a4\3\2\2\2\u02cc\u02cd\7>\2\2\u02cd"+
		"\u02ce\5\u00a7T\2\u02ce\u02cf\7@\2\2\u02cf\u00a6\3\2\2\2\u02d0\u02d5\5"+
		"\u00a9U\2\u02d1\u02d5\5\u00abV\2\u02d2\u02d5\5\u0099M\2\u02d3\u02d5\t"+
		"\36\2\2\u02d4\u02d0\3\2\2\2\u02d4\u02d1\3\2\2\2\u02d4\u02d2\3\2\2\2\u02d4"+
		"\u02d3\3\2\2\2\u02d5\u02d6\3\2\2\2\u02d6\u02d4\3\2\2\2\u02d6\u02d7\3\2"+
		"\2\2\u02d7\u00a8\3\2\2\2\u02d8\u02d9\t\37\2\2\u02d9\u00aa\3\2\2\2\u02da"+
		"\u02db\t \2\2\u02db\u00ac\3\2\2\2\u02dc\u02e0\t!\2\2\u02dd\u02df\n!\2"+
		"\2\u02de\u02dd\3\2\2\2\u02df\u02e2\3\2\2\2\u02e0\u02de\3\2\2\2\u02e0\u02e1"+
		"\3\2\2\2\u02e1\u02e3\3\2\2\2\u02e2\u02e0\3\2\2\2\u02e3\u02e4\t!\2\2\u02e4"+
		"\u00ae\3\2\2\2\u02e5\u02e7\t\"\2\2\u02e6\u02e5\3\2\2\2\u02e7\u02e8\3\2"+
		"\2\2\u02e8\u02e6\3\2\2\2\u02e8\u02e9\3\2\2\2\u02e9\u02ea\3\2\2\2\u02ea"+
		"\u02eb\bX\2\2\u02eb\u00b0\3\2\2\2\u02ec\u02ed\7=\2\2\u02ed\u00b2\3\2\2"+
		"\2\32\2\u0182\u018d\u01d7\u01e6\u0216\u0227\u0237\u0247\u0257\u0269\u0293"+
		"\u0298\u029e\u02a0\u02b0\u02b6\u02be\u02c5\u02ca\u02d4\u02d6\u02e0\u02e8"+
		"\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}